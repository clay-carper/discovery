warning: unused variable: `tim6`
 --> src/09-clocks-and-timers/src/main.rs:7:10
  |
7 | fn delay(tim6: &tim6::RegisterBlock, ms: u16) {
  |          ^^^^ help: if this is intentional, prefix it with an underscore: `_tim6`
  |
  = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `rcc`
  --> src/09-clocks-and-timers/src/main.rs:16:16
   |
16 |     let (leds, rcc, tim6) = aux9::init();
   |                ^^^ help: if this is intentional, prefix it with an underscore: `_rcc`

warning: 2 warnings emitted


clocks-and-timers:	file format elf32-littlearm

Disassembly of section .text:

08000194 <Reset>:
 8000194:      	push	{r7, lr}
 8000196:      	mov	r7, sp
 8000198:      	bl	0x8000d96 <__pre_init>  @ imm = #0xbfa
 800019c:      	movw	r0, #0x4
 80001a0:      	movw	r1, #0x0
 80001a4:      	movt	r0, #0x2000
 80001a8:      	movt	r1, #0x2000
 80001ac:      	cmp	r1, r0
 80001ae:      	bhs	0x80001d8 <Reset+0x44>  @ imm = #0x26
 80001b0:      	movw	r1, #0x0
 80001b4:      	movs	r2, #0x0
 80001b6:      	movt	r1, #0x2000
 80001ba:      	str	r2, [r1], #4
 80001be:      	cmp	r1, r0
 80001c0:      	itttt	lo
 80001c2:      	strlo	r2, [r1], #4
 80001c6:      	cmplo	r1, r0
 80001c8:      	strlo	r2, [r1], #4
 80001cc:      	cmplo	r1, r0
 80001ce:      	bhs	0x80001d8 <Reset+0x44>  @ imm = #0x6
 80001d0:      	str	r2, [r1], #4
 80001d4:      	cmp	r1, r0
 80001d6:      	blo	0x80001ba <Reset+0x26>  @ imm = #-0x20
 80001d8:      	movw	r1, #0x0
 80001dc:      	movw	r0, #0x0
 80001e0:      	movt	r1, #0x2000
 80001e4:      	movt	r0, #0x2000
 80001e8:      	cmp	r0, r1
 80001ea:      	bhs	0x800020a <Reset+0x76>  @ imm = #0x1c
 80001ec:      	adds	r2, r0, #0x4
 80001ee:      	cmp	r1, r2
 80001f0:      	it	hi
 80001f2:      	movhi	r2, r1
 80001f4:      	mvns	r1, r0
 80001f6:      	add	r1, r2
 80001f8:      	adds	r1, #0x4
 80001fa:      	bic	r2, r1, #0x3
 80001fe:      	movw	r1, #0x143c
 8000202:      	movt	r1, #0x800
 8000206:      	bl	0x8001178 <__aeabi_memcpy4> @ imm = #0xf6e
 800020a:      	movw	r0, #0xed88
 800020e:      	movt	r0, #0xe000
 8000212:      	ldr	r1, [r0]
 8000214:      	orr	r1, r1, #0xf00000
 8000218:      	str	r1, [r0]
 800021a:      	bl	0x8000d8a <ResetTrampoline> @ imm = #0xb6c
 800021e:      	trap

08000220 <clocks_and_timers::delay::h64941aebc30b0e68>:
 8000220:      	push	{r4, r5, r7, lr}
 8000222:      	add	r7, sp, #0x8
 8000224:      	movs	r4, #0x0
 8000226:      	adds	r5, r4, #0x1
 8000228:      	bl	0x800116a <__nop>       @ imm = #0xf3e
 800022c:      	cmp	r4, #0x95
 800022e:      	mov	r4, r5
 8000230:      	blo	0x8000226 <clocks_and_timers::delay::h64941aebc30b0e68+0x6> @ imm = #-0xe
 8000232:      	pop	{r4, r5, r7, pc}

08000234 <main>:
 8000234:      	push	{r7, lr}
 8000236:      	mov	r7, sp
 8000238:      	bl	0x800023e <clocks_and_timers::__cortex_m_rt_main::hf015ee89803d836a> @ imm = #0x2
 800023c:      	trap

0800023e <clocks_and_timers::__cortex_m_rt_main::hf015ee89803d836a>:
 800023e:      	push	{r7, lr}
 8000240:      	mov	r7, sp
 8000242:      	bl	0x800116e <__primask_r> @ imm = #0xf28
 8000246:      	mov	r4, r0
 8000248:      	bl	0x8001162 <__cpsid>     @ imm = #0xf16
 800024c:      	movw	r0, #0x0
 8000250:      	and	r1, r4, #0x1
 8000254:      	movt	r0, #0x2000
 8000258:      	ldrb	r5, [r0]
 800025a:      	cmp	r5, #0x0
 800025c:      	itt	eq
 800025e:      	moveq	r2, #0x1
 8000260:      	strbeq	r2, [r0]
 8000262:      	cmp	r1, #0x0
 8000264:      	it	eq
 8000266:      	bleq	0x8001166 <__cpsie>     @ imm = #0xefc
 800026a:      	cmp	r5, #0x0
 800026c:      	bne.w	0x8000438 <clocks_and_timers::__cortex_m_rt_main::hf015ee89803d836a+0x1fa> @ imm = #0x1c8
 8000270:      	movw	r0, #0x1028
 8000274:      	movw	r4, #0x1018
 8000278:      	movt	r0, #0x4002
 800027c:      	movt	r4, #0x4800
 8000280:      	ldr	r1, [r0, #-20]
 8000284:      	mov.w	r5, #0x1000
 8000288:      	mov.w	r6, #0x2000
 800028c:      	mov.w	r8, #0x4000
 8000290:      	orr	r1, r1, #0x200000
 8000294:      	str	r1, [r0, #-20]
 8000298:      	ldr	r1, [r0]
 800029a:      	mov.w	r9, #0x8000
 800029e:      	mov.w	r10, #0x100
 80002a2:      	mov.w	r11, #0x200
 80002a6:      	orr	r1, r1, #0x200000
 80002aa:      	str	r1, [r0]
 80002ac:      	ldr	r1, [r0]
 80002ae:      	bic	r1, r1, #0x200000
 80002b2:      	str	r1, [r0]
 80002b4:      	ldr	r1, [r4, #-24]
 80002b8:      	movs	r0, #0x1
 80002ba:      	bfi	r1, r0, #18, #2
 80002be:      	str	r1, [r4, #-24]
 80002c2:      	ldr	r1, [r4, #-20]
 80002c6:      	bic	r1, r1, #0x200
 80002ca:      	str	r1, [r4, #-20]
 80002ce:      	ldr	r1, [r4, #-24]
 80002d2:      	bfi	r1, r0, #16, #2
 80002d6:      	str	r1, [r4, #-24]
 80002da:      	ldr	r1, [r4, #-20]
 80002de:      	bic	r1, r1, #0x100
 80002e2:      	str	r1, [r4, #-20]
 80002e6:      	ldr	r1, [r4, #-24]
 80002ea:      	bfi	r1, r0, #20, #2
 80002ee:      	str	r1, [r4, #-24]
 80002f2:      	ldr	r1, [r4, #-20]
 80002f6:      	bic	r1, r1, #0x400
 80002fa:      	str	r1, [r4, #-20]
 80002fe:      	ldr	r1, [r4, #-24]
 8000302:      	bfi	r1, r0, #30, #2
 8000306:      	str	r1, [r4, #-24]
 800030a:      	ldr	r1, [r4, #-20]
 800030e:      	bic	r1, r1, #0x8000
 8000312:      	str	r1, [r4, #-20]
 8000316:      	ldr	r1, [r4, #-24]
 800031a:      	bfi	r1, r0, #22, #2
 800031e:      	str	r1, [r4, #-24]
 8000322:      	ldr	r1, [r4, #-20]
 8000326:      	bic	r1, r1, #0x800
 800032a:      	str	r1, [r4, #-20]
 800032e:      	ldr	r1, [r4, #-24]
 8000332:      	bfi	r1, r0, #28, #2
 8000336:      	str	r1, [r4, #-24]
 800033a:      	ldr	r1, [r4, #-20]
 800033e:      	bic	r1, r1, #0x4000
 8000342:      	str	r1, [r4, #-20]
 8000346:      	ldr	r1, [r4, #-24]
 800034a:      	bfi	r1, r0, #24, #2
 800034e:      	str	r1, [r4, #-24]
 8000352:      	ldr	r1, [r4, #-20]
 8000356:      	bic	r1, r1, #0x1000
 800035a:      	str	r1, [r4, #-20]
 800035e:      	ldr	r1, [r4, #-24]
 8000362:      	bfi	r1, r0, #26, #2
 8000366:      	str	r1, [r4, #-24]
 800036a:      	ldr	r0, [r4, #-20]
 800036e:      	bic	r0, r0, #0x2000
 8000372:      	str	r0, [r4, #-20]
 8000376:      	mov.w	r0, #0x2000000
 800037a:      	str	r0, [r4]
 800037c:      	mov.w	r0, #0x1000000
 8000380:      	str	r0, [r4]
 8000382:      	mov.w	r0, #0x4000000
 8000386:      	str	r0, [r4]
 8000388:      	mov.w	r0, #0x80000000
 800038c:      	str	r0, [r4]
 800038e:      	mov.w	r0, #0x8000000
 8000392:      	str	r0, [r4]
 8000394:      	mov.w	r0, #0x40000000
 8000398:      	str	r0, [r4]
 800039a:      	mov.w	r0, #0x10000000
 800039e:      	str	r0, [r4]
 80003a0:      	mov.w	r0, #0x20000000
 80003a4:      	str	r0, [r4]
 80003a6:      	mov.w	r0, #0x400
 80003aa:      	str	r0, [r4]
 80003ac:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x190
 80003b0:      	mov.w	r0, #0x2000000
 80003b4:      	str	r0, [r4]
 80003b6:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x19a
 80003ba:      	mov.w	r0, #0x800
 80003be:      	str	r0, [r4]
 80003c0:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x1a4
 80003c4:      	mov.w	r0, #0x4000000
 80003c8:      	str	r0, [r4]
 80003ca:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x1ae
 80003ce:      	str	r5, [r4]
 80003d0:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x1b4
 80003d4:      	mov.w	r0, #0x8000000
 80003d8:      	str	r0, [r4]
 80003da:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x1be
 80003de:      	str	r6, [r4]
 80003e0:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x1c4
 80003e4:      	mov.w	r0, #0x10000000
 80003e8:      	str	r0, [r4]
 80003ea:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x1ce
 80003ee:      	str.w	r8, [r4]
 80003f2:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x1d6
 80003f6:      	mov.w	r0, #0x20000000
 80003fa:      	str	r0, [r4]
 80003fc:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x1e0
 8000400:      	str.w	r9, [r4]
 8000404:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x1e8
 8000408:      	mov.w	r0, #0x40000000
 800040c:      	str	r0, [r4]
 800040e:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x1f2
 8000412:      	str.w	r10, [r4]
 8000416:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x1fa
 800041a:      	mov.w	r0, #0x80000000
 800041e:      	str	r0, [r4]
 8000420:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x204
 8000424:      	str.w	r11, [r4]
 8000428:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x20c
 800042c:      	mov.w	r0, #0x1000000
 8000430:      	str	r0, [r4]
 8000432:      	bl	0x8000220 <clocks_and_timers::delay::h64941aebc30b0e68> @ imm = #-0x216
 8000436:      	b	0x80003a6 <clocks_and_timers::__cortex_m_rt_main::hf015ee89803d836a+0x168> @ imm = #-0x94
 8000438:      	bl	0x8000b84 <core::panicking::panic::hd499c3017018cd48> @ imm = #0x748
 800043c:      	trap

0800043e <core::ops::function::FnOnce::call_once::hc1f1aa328bfcb169>:
 800043e:      	ldr	r0, [r0]
 8000440:      	b	0x8000440 <core::ops::function::FnOnce::call_once::hc1f1aa328bfcb169+0x2> @ imm = #-0x4

08000442 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a>:
 8000442:      	push	{r4, r5, r6, r7, lr}
 8000444:      	add	r7, sp, #0xc
 8000446:      	push.w	{r8, r9, r10, r11}
 800044a:      	sub	sp, #0x3c
 800044c:      	ldr	r5, [r0]
 800044e:      	movw	r0, #0x2710
 8000452:      	mov	r11, r1
 8000454:      	movw	r12, #0xff9c
 8000458:      	cmp	r5, r0
 800045a:      	movw	r0, #0x1348
 800045e:      	movt	r0, #0x800
 8000462:      	blo	0x80004e4 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0xa2> @ imm = #0x7e
 8000464:      	movw	lr, #0x1759
 8000468:      	movw	r8, #0xd8f0
 800046c:      	movw	r6, #0xe0ff
 8000470:      	add.w	r10, sp, #0x14
 8000474:      	movs	r3, #0x0
 8000476:      	movt	lr, #0xd1b7
 800047a:      	movt	r8, #0xffff
 800047e:      	movw	r9, #0x147b
 8000482:      	movt	r6, #0x5f5
 8000486:      	str.w	r11, [sp, #0x10]
 800048a:      	umull	r2, r4, r5, lr
 800048e:      	add.w	r11, r10, r3
 8000492:      	subs	r3, #0x4
 8000494:      	cmp	r5, r6
 8000496:      	lsr.w	r2, r4, #0xd
 800049a:      	mla	r4, r2, r8, r5
 800049e:      	mov	r5, r2
 80004a0:      	uxth	r1, r4
 80004a2:      	lsr.w	r1, r1, #0x2
 80004a6:      	mul	r1, r1, r9
 80004aa:      	lsr.w	r1, r1, #0x11
 80004ae:      	mla	r4, r1, r12, r4
 80004b2:      	ldrh.w	r1, [r0, r1, lsl #1]
 80004b6:      	strh.w	r1, [r11, #0x23]
 80004ba:      	uxth	r4, r4
 80004bc:      	ldrh.w	r4, [r0, r4, lsl #1]
 80004c0:      	strh.w	r4, [r11, #0x25]
 80004c4:      	bhi	0x800048a <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x48> @ imm = #-0x3e
 80004c6:      	ldr.w	r11, [sp, #0x10]
 80004ca:      	adds	r3, #0x27
 80004cc:      	mov	r5, r2
 80004ce:      	cmp	r5, #0x63
 80004d0:      	bgt	0x80004ea <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0xa8> @ imm = #0x16
 80004d2:      	mov	r1, r5
 80004d4:      	cmp	r1, #0xa
 80004d6:      	blt	0x800050a <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0xc8> @ imm = #0x30
 80004d8:      	ldrh.w	r0, [r0, r1, lsl #1]
 80004dc:      	subs	r6, r3, #0x2
 80004de:      	add	r1, sp, #0x14
 80004e0:      	strh	r0, [r1, r6]
 80004e2:      	b	0x8000514 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0xd2> @ imm = #0x2e
 80004e4:      	movs	r3, #0x27
 80004e6:      	cmp	r5, #0x63
 80004e8:      	ble	0x80004d2 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x90> @ imm = #-0x1a
 80004ea:      	uxth	r1, r5
 80004ec:      	movw	r2, #0x147b
 80004f0:      	lsrs	r1, r1, #0x2
 80004f2:      	subs	r3, #0x2
 80004f4:      	muls	r1, r2, r1
 80004f6:      	add	r6, sp, #0x14
 80004f8:      	lsrs	r1, r1, #0x11
 80004fa:      	mla	r2, r1, r12, r5
 80004fe:      	uxth	r2, r2
 8000500:      	ldrh.w	r2, [r0, r2, lsl #1]
 8000504:      	strh	r2, [r6, r3]
 8000506:      	cmp	r1, #0xa
 8000508:      	bge	0x80004d8 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x96> @ imm = #-0x34
 800050a:      	subs	r6, r3, #0x1
 800050c:      	add.w	r0, r1, #0x30
 8000510:      	add	r1, sp, #0x14
 8000512:      	strb	r0, [r1, r6]
 8000514:      	ldr.w	r0, [r11]
 8000518:      	add	r1, sp, #0x14
 800051a:      	movw	r3, #0x1410
 800051e:      	add.w	r9, r1, r6
 8000522:      	ldr.w	r5, [r11, #0x8]
 8000526:      	ands	r8, r0, #0x1
 800052a:      	lsl.w	r1, r0, #0x1d
 800052e:      	mov.w	r10, #0x2b
 8000532:      	movt	r3, #0x800
 8000536:      	and.w	r2, r3, r1, asr #31
 800053a:      	rsb.w	r4, r6, #0x27
 800053e:      	it	eq
 8000540:      	moveq.w	r10, #0x110000
 8000544:      	cmp	r5, #0x1
 8000546:      	bne	0x800057c <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x13a> @ imm = #0x32
 8000548:      	mov	r5, r9
 800054a:      	ldr.w	r9, [r11, #0xc]
 800054e:      	add.w	r1, r4, r8
 8000552:      	strd	r4, r2, [sp, #12]
 8000556:      	cmp	r9, r1
 8000558:      	bls	0x800058a <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x148> @ imm = #0x2e
 800055a:      	lsls	r0, r0, #0x1c
 800055c:      	str	r5, [sp, #0x8]
 800055e:      	bmi	0x80005bc <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x17a> @ imm = #0x5a
 8000560:      	ldrb.w	r2, [r11, #0x20]
 8000564:      	sub.w	r0, r9, r1
 8000568:      	cmp	r2, #0x3
 800056a:      	it	eq
 800056c:      	moveq	r2, #0x1
 800056e:      	lsls	r1, r2, #0x1e
 8000570:      	beq	0x8000610 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1ce> @ imm = #0x9c
 8000572:      	cmp	r2, #0x1
 8000574:      	bne	0x8000616 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1d4> @ imm = #0x9e
 8000576:      	movs	r5, #0x0
 8000578:      	mov	r1, r0
 800057a:      	b	0x800061c <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1da> @ imm = #0x9e
 800057c:      	mov	r0, r11
 800057e:      	mov	r1, r10
 8000580:      	bl	0x8000702 <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37> @ imm = #0x17e
 8000584:      	cbz	r0, 0x80005a4 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x162> @ imm = #0x1c
 8000586:      	movs	r4, #0x1
 8000588:      	b	0x80005de <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x19c> @ imm = #0x52
 800058a:      	ldr	r2, [sp, #0x10]
 800058c:      	mov	r0, r11
 800058e:      	mov	r1, r10
 8000590:      	bl	0x8000702 <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37> @ imm = #0x16e
 8000594:      	cmp	r0, #0x0
 8000596:      	bne	0x8000688 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x246> @ imm = #0xee
 8000598:      	ldrd	r0, r1, [r11, #24]
 800059c:      	ldr	r3, [r1, #0xc]
 800059e:      	mov	r1, r5
 80005a0:      	ldr	r2, [sp, #0xc]
 80005a2:      	b	0x80005ae <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x16c> @ imm = #0x8
 80005a4:      	ldrd	r0, r1, [r11, #24]
 80005a8:      	mov	r2, r4
 80005aa:      	ldr	r3, [r1, #0xc]
 80005ac:      	mov	r1, r9
 80005ae:      	blx	r3
 80005b0:      	mov	r4, r0
 80005b2:      	mov	r0, r4
 80005b4:      	add	sp, #0x3c
 80005b6:      	pop.w	{r8, r9, r10, r11}
 80005ba:      	pop	{r4, r5, r6, r7, pc}
 80005bc:      	ldr	r2, [sp, #0x10]
 80005be:      	movs	r0, #0x30
 80005c0:      	ldrb.w	r1, [r11, #0x20]
 80005c4:      	movs	r4, #0x1
 80005c6:      	ldr.w	r5, [r11, #0x4]
 80005ca:      	str	r1, [sp, #0x4]
 80005cc:      	mov	r1, r10
 80005ce:      	str.w	r0, [r11, #0x4]
 80005d2:      	mov	r0, r11
 80005d4:      	strb.w	r4, [r11, #0x20]
 80005d8:      	bl	0x8000702 <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37> @ imm = #0x126
 80005dc:      	cbz	r0, 0x80005e8 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1a6> @ imm = #0x8
 80005de:      	mov	r0, r4
 80005e0:      	add	sp, #0x3c
 80005e2:      	pop.w	{r8, r9, r10, r11}
 80005e6:      	pop	{r4, r5, r6, r7, pc}
 80005e8:      	add.w	r0, r6, r9
 80005ec:      	mov	r10, r5
 80005ee:      	sub.w	r0, r0, r8
 80005f2:      	ldrd	r4, r5, [r11, #24]
 80005f6:      	ldr.w	r8, [sp, #0xc]
 80005fa:      	sub.w	r6, r0, #0x26
 80005fe:      	subs	r6, #0x1
 8000600:      	beq	0x800067c <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x23a> @ imm = #0x78
 8000602:      	ldr	r2, [r5, #0x10]
 8000604:      	mov	r0, r4
 8000606:      	movs	r1, #0x30
 8000608:      	blx	r2
 800060a:      	cmp	r0, #0x0
 800060c:      	beq	0x80005fe <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1bc> @ imm = #-0x12
 800060e:      	b	0x8000688 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x246> @ imm = #0x76
 8000610:      	movs	r1, #0x0
 8000612:      	mov	r5, r0
 8000614:      	b	0x800061c <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1da> @ imm = #0x4
 8000616:      	lsrs	r1, r0, #0x1
 8000618:      	adds	r0, #0x1
 800061a:      	lsrs	r5, r0, #0x1
 800061c:      	ldr.w	r6, [r11, #0x4]
 8000620:      	adds	r4, r1, #0x1
 8000622:      	ldrd	r9, r8, [r11, #24]
 8000626:      	subs	r4, #0x1
 8000628:      	beq	0x800063a <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1f8> @ imm = #0xe
 800062a:      	ldr.w	r2, [r8, #0x10]
 800062e:      	mov	r0, r9
 8000630:      	mov	r1, r6
 8000632:      	blx	r2
 8000634:      	cmp	r0, #0x0
 8000636:      	beq	0x8000626 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1e4> @ imm = #-0x14
 8000638:      	b	0x8000688 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x246> @ imm = #0x4c
 800063a:      	subs.w	r4, r6, #0x110000
 800063e:      	it	ne
 8000640:      	movne	r4, r5
 8000642:      	cmp.w	r6, #0x110000
 8000646:      	beq	0x8000688 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x246> @ imm = #0x3e
 8000648:      	ldr	r2, [sp, #0x10]
 800064a:      	mov	r0, r11
 800064c:      	mov	r1, r10
 800064e:      	bl	0x8000702 <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37> @ imm = #0xb0
 8000652:      	cbnz	r0, 0x8000688 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x246> @ imm = #0x32
 8000654:      	ldr.w	r3, [r8, #0xc]
 8000658:      	mov	r0, r9
 800065a:      	ldrd	r1, r2, [sp, #8]
 800065e:      	blx	r3
 8000660:      	cbnz	r0, 0x8000688 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x246> @ imm = #0x24
 8000662:      	movs	r5, #0x0
 8000664:      	cmp	r4, r5
 8000666:      	beq	0x80006aa <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x268> @ imm = #0x40
 8000668:      	ldr.w	r2, [r8, #0x10]
 800066c:      	mov	r0, r9
 800066e:      	mov	r1, r6
 8000670:      	blx	r2
 8000672:      	adds	r5, #0x1
 8000674:      	cmp	r0, #0x0
 8000676:      	beq	0x8000664 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x222> @ imm = #-0x16
 8000678:      	subs	r0, r5, #0x1
 800067a:      	b	0x80006ac <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x26a> @ imm = #0x2e
 800067c:      	ldr	r3, [r5, #0xc]
 800067e:      	mov	r0, r4
 8000680:      	ldr	r1, [sp, #0x8]
 8000682:      	mov	r2, r8
 8000684:      	blx	r3
 8000686:      	cbz	r0, 0x8000694 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x252> @ imm = #0xa
 8000688:      	movs	r4, #0x1
 800068a:      	mov	r0, r4
 800068c:      	add	sp, #0x3c
 800068e:      	pop.w	{r8, r9, r10, r11}
 8000692:      	pop	{r4, r5, r6, r7, pc}
 8000694:      	ldr	r0, [sp, #0x4]
 8000696:      	movs	r4, #0x0
 8000698:      	strb.w	r0, [r11, #0x20]
 800069c:      	str.w	r10, [r11, #0x4]
 80006a0:      	mov	r0, r4
 80006a2:      	add	sp, #0x3c
 80006a4:      	pop.w	{r8, r9, r10, r11}
 80006a8:      	pop	{r4, r5, r6, r7, pc}
 80006aa:      	mov	r0, r4
 80006ac:      	mov	r1, r4
 80006ae:      	movs	r4, #0x0
 80006b0:      	cmp	r0, r1
 80006b2:      	it	lo
 80006b4:      	movlo	r4, #0x1
 80006b6:      	mov	r0, r4
 80006b8:      	add	sp, #0x3c
 80006ba:      	pop.w	{r8, r9, r10, r11}
 80006be:      	pop	{r4, r5, r6, r7, pc}

080006c0 <core::panicking::panic_fmt::h46301c7d62ff248a>:
 80006c0:      	push	{r7, lr}
 80006c2:      	mov	r7, sp
 80006c4:      	sub	sp, #0x10
 80006c6:      	movw	r1, #0x12ec
 80006ca:      	movt	r1, #0x800
 80006ce:      	strd	r0, r1, [sp, #8]
 80006d2:      	movw	r0, #0x1318
 80006d6:      	movt	r0, #0x800
 80006da:      	str	r0, [sp, #0x4]
 80006dc:      	movw	r0, #0x1410
 80006e0:      	movt	r0, #0x800
 80006e4:      	str	r0, [sp]
 80006e6:      	mov	r0, sp
 80006e8:      	bl	0x8000d98 <rust_begin_unwind> @ imm = #0x6ac
 80006ec:      	trap

080006ee <core::ptr::drop_in_place<&core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>>::hda90baf15865d9c4>:
 80006ee:      	bx	lr

080006f0 <<T as core::any::Any>::type_id::h73579ccd4cb5b209>:
 80006f0:      	movw	r0, #0x208f
 80006f4:      	movw	r1, #0x70d7
 80006f8:      	movt	r0, #0x9257
 80006fc:      	movt	r1, #0xefa8
 8000700:      	bx	lr

08000702 <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37>:
 8000702:      	push	{r4, r5, r7, lr}
 8000704:      	add	r7, sp, #0x8
 8000706:      	mov	r4, r2
 8000708:      	mov	r5, r0
 800070a:      	cmp.w	r1, #0x110000
 800070e:      	beq	0x800071e <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37+0x1c> @ imm = #0xc
 8000710:      	ldrd	r0, r2, [r5, #24]
 8000714:      	ldr	r2, [r2, #0x10]
 8000716:      	blx	r2
 8000718:      	cbz	r0, 0x800071e <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37+0x1c> @ imm = #0x2
 800071a:      	movs	r0, #0x1
 800071c:      	pop	{r4, r5, r7, pc}
 800071e:      	cbz	r4, 0x8000730 <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37+0x2e> @ imm = #0xe
 8000720:      	ldrd	r0, r1, [r5, #24]
 8000724:      	movs	r2, #0x0
 8000726:      	ldr	r3, [r1, #0xc]
 8000728:      	mov	r1, r4
 800072a:      	pop.w	{r4, r5, r7, lr}
 800072e:      	bx	r3
 8000730:      	movs	r0, #0x0
 8000732:      	pop	{r4, r5, r7, pc}

08000734 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b>:
 8000734:      	push	{r4, r5, r6, r7, lr}
 8000736:      	add	r7, sp, #0xc
 8000738:      	push.w	{r8, r9, r10, r11}
 800073c:      	sub	sp, #0x14
 800073e:      	mov	r8, r1
 8000740:      	ldr.w	lr, [r0, #0x8]
 8000744:      	ldr	r1, [r0, #0x10]
 8000746:      	mov	r9, r2
 8000748:      	cmp.w	lr, #0x1
 800074c:      	bne	0x8000770 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x3c> @ imm = #0x20
 800074e:      	cmp	r1, #0x1
 8000750:      	beq	0x8000776 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x42> @ imm = #0x22
 8000752:      	ldr.w	r10, [r0, #0xc]
 8000756:      	cmp.w	r9, #0x0
 800075a:      	beq.w	0x8000b54 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x420> @ imm = #0x3f6
 800075e:      	sub.w	r1, r9, #0x1
 8000762:      	and	lr, r9, #0x3
 8000766:      	cmp	r1, #0x3
 8000768:      	bhs	0x800084c <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x118> @ imm = #0xe0
 800076a:      	movs	r2, #0x0
 800076c:      	mov	r6, r8
 800076e:      	b	0x8000a4e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x31a> @ imm = #0x2dc
 8000770:      	cmp	r1, #0x1
 8000772:      	bne.w	0x8000b5a <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x426> @ imm = #0x3e4
 8000776:      	ldr	r6, [r0, #0x14]
 8000778:      	add.w	r12, r8, r9
 800077c:      	movs	r2, #0x0
 800077e:      	mov	r4, r8
 8000780:      	cmp	r6, #0x0
 8000782:      	beq	0x800081c <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xe8> @ imm = #0x96
 8000784:      	str	r0, [sp, #0x10]
 8000786:      	b	0x80007bc <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x88> @ imm = #0x32
 8000788:      	ldrb	r5, [r4], #1
 800078c:      	and	r8, r5, #0x3f
 8000790:      	mov.w	r5, #0x1c0000
 8000794:      	and.w	r1, r5, r1, lsl #18
 8000798:      	orr.w	r1, r1, r10, lsl #12
 800079c:      	orr.w	r1, r1, r11, lsl #6
 80007a0:      	add	r1, r8
 80007a2:      	mov	r8, r9
 80007a4:      	mov	r9, lr
 80007a6:      	mov	lr, r0
 80007a8:      	ldr	r0, [sp, #0x10]
 80007aa:      	cmp.w	r1, #0x110000
 80007ae:      	beq.w	0x8000b3c <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x408> @ imm = #0x38a
 80007b2:      	subs	r1, r2, r3
 80007b4:      	subs	r6, #0x1
 80007b6:      	add.w	r2, r1, r4
 80007ba:      	beq	0x800081c <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xe8> @ imm = #0x5e
 80007bc:      	cmp	r4, r12
 80007be:      	beq.w	0x8000b3c <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x408> @ imm = #0x37a
 80007c2:      	mov	r3, r4
 80007c4:      	ldrsb	r1, [r4], #1
 80007c8:      	cmp.w	r1, #0xffffffff
 80007cc:      	bgt	0x80007b2 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x7e> @ imm = #-0x1e
 80007ce:      	cmp	r4, r12
 80007d0:      	beq	0x80007e2 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xae> @ imm = #0xe
 80007d2:      	ldrb	r5, [r3, #0x1]
 80007d4:      	adds	r4, r3, #0x2
 80007d6:      	and	r10, r5, #0x3f
 80007da:      	uxtb	r1, r1
 80007dc:      	cmp	r1, #0xe0
 80007de:      	blo	0x80007b2 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x7e> @ imm = #-0x30
 80007e0:      	b	0x80007ee <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xba> @ imm = #0xa
 80007e2:      	mov.w	r10, #0x0
 80007e6:      	mov	r4, r12
 80007e8:      	uxtb	r1, r1
 80007ea:      	cmp	r1, #0xe0
 80007ec:      	blo	0x80007b2 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x7e> @ imm = #-0x3e
 80007ee:      	cmp	r4, r12
 80007f0:      	beq	0x8000800 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xcc> @ imm = #0xc
 80007f2:      	ldrb	r5, [r4], #1
 80007f6:      	and	r11, r5, #0x3f
 80007fa:      	cmp	r1, #0xf0
 80007fc:      	blo	0x80007b2 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x7e> @ imm = #-0x4e
 80007fe:      	b	0x800080a <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xd6> @ imm = #0x8
 8000800:      	mov.w	r11, #0x0
 8000804:      	mov	r4, r12
 8000806:      	cmp	r1, #0xf0
 8000808:      	blo	0x80007b2 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x7e> @ imm = #-0x5a
 800080a:      	mov	r0, lr
 800080c:      	mov	lr, r9
 800080e:      	mov	r9, r8
 8000810:      	cmp	r4, r12
 8000812:      	bne	0x8000788 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x54> @ imm = #-0x8e
 8000814:      	mov.w	r8, #0x0
 8000818:      	mov	r4, r12
 800081a:      	b	0x8000790 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x5c> @ imm = #-0x8e
 800081c:      	cmp	r4, r12
 800081e:      	beq.w	0x8000b3c <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x408> @ imm = #0x31a
 8000822:      	mov	r1, r4
 8000824:      	ldrsb	r3, [r1], #1
 8000828:      	cmp.w	r3, #0xffffffff
 800082c:      	ble	0x800086e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x13a> @ imm = #0x3e
 800082e:      	cmp	r2, #0x0
 8000830:      	beq.w	0x80009ac <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x278> @ imm = #0x178
 8000834:      	cmp	r2, r9
 8000836:      	bhs.w	0x80009a6 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x272> @ imm = #0x16c
 800083a:      	ldrsb.w	r1, [r8, r2]
 800083e:      	cmn.w	r1, #0x40
 8000842:      	bge.w	0x80009ac <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x278> @ imm = #0x166
 8000846:      	movs	r1, #0x0
 8000848:      	movs	r2, #0x0
 800084a:      	b	0x80009ae <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x27a> @ imm = #0x160
 800084c:      	sub.w	r1, r9, #0x4
 8000850:      	bic	r2, r1, #0x3
 8000854:      	movs	r1, #0x1
 8000856:      	cmp	r2, #0xc
 8000858:      	add.w	r1, r1, r2, lsr #2
 800085c:      	and	r3, r1, #0x3
 8000860:      	bhs	0x8000888 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x154> @ imm = #0x24
 8000862:      	movs	r2, #0x0
 8000864:      	mov	r6, r8
 8000866:      	cmp	r3, #0x0
 8000868:      	bne.w	0x800096e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x23a> @ imm = #0x102
 800086c:      	b	0x8000a4e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x31a> @ imm = #0x1de
 800086e:      	uxtb	r3, r3
 8000870:      	cmp	r1, r12
 8000872:      	beq.w	0x80009fc <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x2c8> @ imm = #0x186
 8000876:      	ldrb	r5, [r4, #0x1]
 8000878:      	adds	r1, r4, #0x2
 800087a:      	and	r4, r5, #0x3f
 800087e:      	lsls	r6, r4, #0x6
 8000880:      	cmp	r3, #0xe0
 8000882:      	bhs.w	0x8000a06 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x2d2> @ imm = #0x180
 8000886:      	b	0x800082e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xfa> @ imm = #-0x5c
 8000888:      	bic	r1, r1, #0x3
 800088c:      	strd	r3, lr, [sp, #4]
 8000890:      	rsb.w	lr, r1, #0x0
 8000894:      	movs	r2, #0x0
 8000896:      	mov	r6, r8
 8000898:      	str.w	r8, [sp, #0xc]
 800089c:      	ldrsb.w	r4, [r6, #0xc]
 80008a0:      	ldrsb.w	r1, [r6, #0xd]
 80008a4:      	ldrsb.w	r8, [r6, #0xe]
 80008a8:      	ldrsb.w	r11, [r6, #0xf]
 80008ac:      	ldrsb	r3, [r6], #16
 80008b0:      	ldrsb	r12, [r6, #-15]
 80008b4:      	cmn.w	r3, #0x41
 80008b8:      	it	gt
 80008ba:      	addgt	r2, #0x1
 80008bc:      	ldrsb	r3, [r6, #-14]
 80008c0:      	cmn.w	r12, #0x41
 80008c4:      	it	gt
 80008c6:      	addgt	r2, #0x1
 80008c8:      	ldrsb	r5, [r6, #-13]
 80008cc:      	cmn.w	r3, #0x41
 80008d0:      	it	gt
 80008d2:      	addgt	r2, #0x1
 80008d4:      	ldrsb	r3, [r6, #-12]
 80008d8:      	cmn.w	r5, #0x41
 80008dc:      	it	gt
 80008de:      	addgt	r2, #0x1
 80008e0:      	ldrsb	r5, [r6, #-11]
 80008e4:      	cmn.w	r3, #0x41
 80008e8:      	it	gt
 80008ea:      	addgt	r2, #0x1
 80008ec:      	ldrsb	r3, [r6, #-10]
 80008f0:      	cmn.w	r5, #0x41
 80008f4:      	it	gt
 80008f6:      	addgt	r2, #0x1
 80008f8:      	ldrsb	r5, [r6, #-9]
 80008fc:      	cmn.w	r3, #0x41
 8000900:      	it	gt
 8000902:      	addgt	r2, #0x1
 8000904:      	ldrsb	r3, [r6, #-8]
 8000908:      	cmn.w	r5, #0x41
 800090c:      	it	gt
 800090e:      	addgt	r2, #0x1
 8000910:      	ldrsb	r5, [r6, #-7]
 8000914:      	cmn.w	r3, #0x41
 8000918:      	it	gt
 800091a:      	addgt	r2, #0x1
 800091c:      	ldrsb	r3, [r6, #-6]
 8000920:      	cmn.w	r5, #0x41
 8000924:      	it	gt
 8000926:      	addgt	r2, #0x1
 8000928:      	ldrsb	r5, [r6, #-5]
 800092c:      	cmn.w	r3, #0x41
 8000930:      	it	gt
 8000932:      	addgt	r2, #0x1
 8000934:      	cmn.w	r5, #0x41
 8000938:      	it	gt
 800093a:      	addgt	r2, #0x1
 800093c:      	cmn.w	r4, #0x41
 8000940:      	it	gt
 8000942:      	addgt	r2, #0x1
 8000944:      	cmn.w	r1, #0x41
 8000948:      	it	gt
 800094a:      	addgt	r2, #0x1
 800094c:      	cmn.w	r8, #0x41
 8000950:      	it	gt
 8000952:      	addgt	r2, #0x1
 8000954:      	cmn.w	r11, #0x41
 8000958:      	it	gt
 800095a:      	addgt	r2, #0x1
 800095c:      	adds.w	lr, lr, #0x4
 8000960:      	bne	0x800089c <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x168> @ imm = #-0xc8
 8000962:      	ldr.w	r8, [sp, #0xc]
 8000966:      	ldrd	r3, lr, [sp, #4]
 800096a:      	cmp	r3, #0x0
 800096c:      	beq	0x8000a4e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x31a> @ imm = #0xde
 800096e:      	ldrsb.w	r5, [r6]
 8000972:      	ldrsb.w	r4, [r6, #0x1]
 8000976:      	ldrsb.w	r1, [r6, #0x2]
 800097a:      	cmn.w	r5, #0x41
 800097e:      	ldrsb.w	r12, [r6, #0x3]
 8000982:      	it	gt
 8000984:      	addgt	r2, #0x1
 8000986:      	cmn.w	r4, #0x41
 800098a:      	it	gt
 800098c:      	addgt	r2, #0x1
 800098e:      	cmn.w	r1, #0x41
 8000992:      	it	gt
 8000994:      	addgt	r2, #0x1
 8000996:      	cmn.w	r12, #0x41
 800099a:      	it	gt
 800099c:      	addgt	r2, #0x1
 800099e:      	cmp	r3, #0x1
 80009a0:      	bne	0x80009c4 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x290> @ imm = #0x20
 80009a2:      	adds	r6, #0x4
 80009a4:      	b	0x8000a4e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x31a> @ imm = #0xa6
 80009a6:      	cmp	r2, r9
 80009a8:      	bne.w	0x8000846 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x112> @ imm = #-0x166
 80009ac:      	mov	r1, r8
 80009ae:      	cmp	r1, #0x0
 80009b0:      	ite	eq
 80009b2:      	moveq	r2, r9
 80009b4:      	movne	r8, r1
 80009b6:      	cmp.w	lr, #0x1
 80009ba:      	beq.w	0x8000b46 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x412> @ imm = #0x188
 80009be:      	ldrd	r1, r0, [r0, #24]
 80009c2:      	b	0x8000b60 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x42c> @ imm = #0x19a
 80009c4:      	ldrsb.w	r5, [r6, #0x4]
 80009c8:      	ldrsb.w	r4, [r6, #0x5]
 80009cc:      	ldrsb.w	r1, [r6, #0x6]
 80009d0:      	cmn.w	r5, #0x41
 80009d4:      	ldrsb.w	r12, [r6, #0x7]
 80009d8:      	it	gt
 80009da:      	addgt	r2, #0x1
 80009dc:      	cmn.w	r4, #0x41
 80009e0:      	it	gt
 80009e2:      	addgt	r2, #0x1
 80009e4:      	cmn.w	r1, #0x41
 80009e8:      	it	gt
 80009ea:      	addgt	r2, #0x1
 80009ec:      	cmn.w	r12, #0x41
 80009f0:      	it	gt
 80009f2:      	addgt	r2, #0x1
 80009f4:      	cmp	r3, #0x2
 80009f6:      	bne	0x8000a1c <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x2e8> @ imm = #0x22
 80009f8:      	adds	r6, #0x8
 80009fa:      	b	0x8000a4e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x31a> @ imm = #0x50
 80009fc:      	movs	r6, #0x0
 80009fe:      	mov	r1, r12
 8000a00:      	cmp	r3, #0xe0
 8000a02:      	blo.w	0x800082e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xfa> @ imm = #-0x1d8
 8000a06:      	cmp	r1, r12
 8000a08:      	beq.w	0x8000b0e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x3da> @ imm = #0x102
 8000a0c:      	ldrb	r4, [r1], #1
 8000a10:      	and	r4, r4, #0x3f
 8000a14:      	cmp	r3, #0xf0
 8000a16:      	blo.w	0x800082e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xfa> @ imm = #-0x1ec
 8000a1a:      	b	0x8000b18 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x3e4> @ imm = #0xfa
 8000a1c:      	ldrsb.w	r5, [r6, #0x8]
 8000a20:      	ldrsb.w	r4, [r6, #0x9]
 8000a24:      	ldrsb.w	r1, [r6, #0xa]
 8000a28:      	cmn.w	r5, #0x41
 8000a2c:      	ldrsb.w	r12, [r6, #0xb]
 8000a30:      	it	gt
 8000a32:      	addgt	r2, #0x1
 8000a34:      	cmn.w	r4, #0x41
 8000a38:      	it	gt
 8000a3a:      	addgt	r2, #0x1
 8000a3c:      	cmn.w	r1, #0x41
 8000a40:      	it	gt
 8000a42:      	addgt	r2, #0x1
 8000a44:      	cmn.w	r12, #0x41
 8000a48:      	it	gt
 8000a4a:      	addgt	r2, #0x1
 8000a4c:      	adds	r6, #0xc
 8000a4e:      	cmp.w	lr, #0x0
 8000a52:      	beq	0x8000a84 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x350> @ imm = #0x2e
 8000a54:      	ldrsb.w	r1, [r6]
 8000a58:      	cmn.w	r1, #0x41
 8000a5c:      	it	gt
 8000a5e:      	addgt	r2, #0x1
 8000a60:      	cmp.w	lr, #0x1
 8000a64:      	beq	0x8000a84 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x350> @ imm = #0x1c
 8000a66:      	ldrsb.w	r1, [r6, #0x1]
 8000a6a:      	cmn.w	r1, #0x41
 8000a6e:      	it	gt
 8000a70:      	addgt	r2, #0x1
 8000a72:      	cmp.w	lr, #0x2
 8000a76:      	beq	0x8000a84 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x350> @ imm = #0xa
 8000a78:      	ldrsb.w	r1, [r6, #0x2]
 8000a7c:      	cmn.w	r1, #0x41
 8000a80:      	it	gt
 8000a82:      	addgt	r2, #0x1
 8000a84:      	cmp	r10, r2
 8000a86:      	bls	0x8000b5a <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x426> @ imm = #0xd0
 8000a88:      	ldrb.w	r3, [r0, #0x20]
 8000a8c:      	sub.w	r2, r10, r2
 8000a90:      	subs	r1, r3, #0x3
 8000a92:      	it	ne
 8000a94:      	movne	r1, r3
 8000a96:      	lsls	r3, r1, #0x1e
 8000a98:      	str.w	r8, [sp, #0xc]
 8000a9c:      	beq	0x8000aaa <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x376> @ imm = #0xa
 8000a9e:      	cmp	r1, #0x1
 8000aa0:      	bne	0x8000ab0 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x37c> @ imm = #0xc
 8000aa2:      	mov.w	r11, #0x0
 8000aa6:      	mov	r1, r2
 8000aa8:      	b	0x8000ab8 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x384> @ imm = #0xc
 8000aaa:      	movs	r1, #0x0
 8000aac:      	mov	r11, r2
 8000aae:      	b	0x8000ab8 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x384> @ imm = #0x6
 8000ab0:      	lsrs	r1, r2, #0x1
 8000ab2:      	adds	r2, #0x1
 8000ab4:      	lsr.w	r11, r2, #0x1
 8000ab8:      	ldr	r6, [r0, #0x4]
 8000aba:      	adds	r4, r1, #0x1
 8000abc:      	ldrd	r8, r5, [r0, #24]
 8000ac0:      	subs	r4, #0x1
 8000ac2:      	beq	0x8000ad2 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x39e> @ imm = #0xc
 8000ac4:      	ldr	r2, [r5, #0x10]
 8000ac6:      	mov	r0, r8
 8000ac8:      	mov	r1, r6
 8000aca:      	blx	r2
 8000acc:      	cmp	r0, #0x0
 8000ace:      	beq	0x8000ac0 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x38c> @ imm = #-0x12
 8000ad0:      	b	0x8000aec <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x3b8> @ imm = #0x18
 8000ad2:      	subs.w	r10, r6, #0x110000
 8000ad6:      	it	ne
 8000ad8:      	movne	r10, r11
 8000ada:      	cmp.w	r6, #0x110000
 8000ade:      	beq	0x8000aec <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x3b8> @ imm = #0xa
 8000ae0:      	ldr	r3, [r5, #0xc]
 8000ae2:      	mov	r0, r8
 8000ae4:      	ldr	r1, [sp, #0xc]
 8000ae6:      	mov	r2, r9
 8000ae8:      	blx	r3
 8000aea:      	cbz	r0, 0x8000af6 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x3c2> @ imm = #0x8
 8000aec:      	movs	r0, #0x1
 8000aee:      	add	sp, #0x14
 8000af0:      	pop.w	{r8, r9, r10, r11}
 8000af4:      	pop	{r4, r5, r6, r7, pc}
 8000af6:      	movs	r4, #0x0
 8000af8:      	cmp	r10, r4
 8000afa:      	beq	0x8000b72 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x43e> @ imm = #0x74
 8000afc:      	ldr	r2, [r5, #0x10]
 8000afe:      	mov	r0, r8
 8000b00:      	mov	r1, r6
 8000b02:      	blx	r2
 8000b04:      	adds	r4, #0x1
 8000b06:      	cmp	r0, #0x0
 8000b08:      	beq	0x8000af8 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x3c4> @ imm = #-0x14
 8000b0a:      	subs	r1, r4, #0x1
 8000b0c:      	b	0x8000b74 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x440> @ imm = #0x64
 8000b0e:      	movs	r4, #0x0
 8000b10:      	mov	r1, r12
 8000b12:      	cmp	r3, #0xf0
 8000b14:      	blo.w	0x800082e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xfa> @ imm = #-0x2ea
 8000b18:      	orrs	r6, r4
 8000b1a:      	mov.w	r5, #0x1c0000
 8000b1e:      	and.w	r3, r5, r3, lsl #18
 8000b22:      	cmp	r1, r12
 8000b24:      	itte	ne
 8000b26:      	ldrbne	r1, [r1]
 8000b28:      	andne	r1, r1, #0x3f
 8000b2c:      	moveq	r1, #0x0
 8000b2e:      	orr.w	r3, r3, r6, lsl #6
 8000b32:      	add	r1, r3
 8000b34:      	cmp.w	r1, #0x110000
 8000b38:      	bne.w	0x800082e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xfa> @ imm = #-0x30e
 8000b3c:      	mov	r2, r9
 8000b3e:      	cmp.w	lr, #0x1
 8000b42:      	bne.w	0x80009be <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x28a> @ imm = #-0x188
 8000b46:      	mov	r9, r2
 8000b48:      	ldr.w	r10, [r0, #0xc]
 8000b4c:      	cmp.w	r9, #0x0
 8000b50:      	bne.w	0x800075e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x2a> @ imm = #-0x3f6
 8000b54:      	movs	r2, #0x0
 8000b56:      	cmp	r10, r2
 8000b58:      	bhi	0x8000a88 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x354> @ imm = #-0xd4
 8000b5a:      	ldr	r1, [r0, #0x18]
 8000b5c:      	mov	r2, r9
 8000b5e:      	ldr	r0, [r0, #0x1c]
 8000b60:      	ldr	r3, [r0, #0xc]
 8000b62:      	mov	r0, r1
 8000b64:      	mov	r1, r8
 8000b66:      	add	sp, #0x14
 8000b68:      	pop.w	{r8, r9, r10, r11}
 8000b6c:      	pop.w	{r4, r5, r6, r7, lr}
 8000b70:      	bx	r3
 8000b72:      	mov	r1, r10
 8000b74:      	movs	r0, #0x0
 8000b76:      	cmp	r1, r10
 8000b78:      	it	lo
 8000b7a:      	movlo	r0, #0x1
 8000b7c:      	add	sp, #0x14
 8000b7e:      	pop.w	{r8, r9, r10, r11}
 8000b82:      	pop	{r4, r5, r6, r7, pc}

08000b84 <core::panicking::panic::hd499c3017018cd48>:
 8000b84:      	push	{r7, lr}
 8000b86:      	mov	r7, sp
 8000b88:      	sub	sp, #0x20
 8000b8a:      	movs	r0, #0x0
 8000b8c:      	movw	r1, #0x1410
 8000b90:      	str	r0, [sp, #0x14]
 8000b92:      	movt	r1, #0x800
 8000b96:      	strd	r0, r0, [sp, #8]
 8000b9a:      	movs	r0, #0x1
 8000b9c:      	str	r0, [sp, #0x4]
 8000b9e:      	add	r0, sp, #0x18
 8000ba0:      	str	r0, [sp]
 8000ba2:      	movs	r0, #0x2b
 8000ba4:      	str	r0, [sp, #0x1c]
 8000ba6:      	movw	r0, #0x1294
 8000baa:      	movt	r0, #0x800
 8000bae:      	str	r1, [sp, #0x10]
 8000bb0:      	str	r0, [sp, #0x18]
 8000bb2:      	mov	r0, sp
 8000bb4:      	bl	0x80006c0 <core::panicking::panic_fmt::h46301c7d62ff248a> @ imm = #-0x4f8
 8000bb8:      	trap

08000bba <<&T as core::fmt::Display>::fmt::h63ea021ca5429c64>:
 8000bba:      	mov	r3, r1
 8000bbc:      	ldrd	r1, r2, [r0]
 8000bc0:      	mov	r0, r3
 8000bc2:      	b.w	0x8000734 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b> @ imm = #-0x492

08000bc6 <core::fmt::write::h57ce06a461283b3c>:
 8000bc6:      	push	{r4, r5, r6, r7, lr}
 8000bc8:      	add	r7, sp, #0xc
 8000bca:      	push.w	{r8, r9, r10, r11}
 8000bce:      	sub	sp, #0x2c
 8000bd0:      	mov	r11, r2
 8000bd2:      	movs	r2, #0x3
 8000bd4:      	ldr.w	r10, [r11, #0x8]
 8000bd8:      	strb.w	r2, [sp, #0x28]
 8000bdc:      	movs	r2, #0x20
 8000bde:      	str	r2, [sp, #0xc]
 8000be0:      	movs	r2, #0x0
 8000be2:      	cmp.w	r10, #0x0
 8000be6:      	str	r2, [sp, #0x8]
 8000be8:      	str	r1, [sp, #0x24]
 8000bea:      	str	r0, [sp, #0x20]
 8000bec:      	str	r2, [sp, #0x18]
 8000bee:      	str	r2, [sp, #0x10]
 8000bf0:      	beq	0x8000ccc <core::fmt::write::h57ce06a461283b3c+0x106> @ imm = #0xd8
 8000bf2:      	ldr.w	r0, [r11, #0xc]
 8000bf6:      	cmp	r0, #0x0
 8000bf8:      	beq.w	0x8000d1a <core::fmt::write::h57ce06a461283b3c+0x154> @ imm = #0x11e
 8000bfc:      	mvn	r1, #0x1f
 8000c00:      	ldr.w	r9, [r11]
 8000c04:      	add.w	r1, r1, r0, lsl #5
 8000c08:      	lsls	r0, r0, #0x5
 8000c0a:      	movs	r4, #0x0
 8000c0c:      	mov.w	r8, #0x0
 8000c10:      	movs	r2, #0x1
 8000c12:      	add.w	r1, r2, r1, lsr #5
 8000c16:      	str	r1, [sp]
 8000c18:      	str	r0, [sp, #0x4]
 8000c1a:      	add.w	r0, r9, r8
 8000c1e:      	ldr	r2, [r0, #0x4]
 8000c20:      	cbz	r2, 0x8000c34 <core::fmt::write::h57ce06a461283b3c+0x6e> @ imm = #0x10
 8000c22:      	ldrd	r0, r3, [sp, #32]
 8000c26:      	ldr.w	r1, [r9, r8]
 8000c2a:      	ldr	r3, [r3, #0xc]
 8000c2c:      	blx	r3
 8000c2e:      	cmp	r0, #0x0
 8000c30:      	bne.w	0x8000d3c <core::fmt::write::h57ce06a461283b3c+0x176> @ imm = #0x108
 8000c34:      	add.w	r0, r10, r8, lsl #2
 8000c38:      	ldr.w	r1, [r11, #0x10]
 8000c3c:      	ldrd	r5, r6, [r0, #4]
 8000c40:      	ldrd	r2, r3, [r0, #20]
 8000c44:      	strd	r6, r5, [sp, #8]
 8000c48:      	ldrb	r6, [r0, #0x1c]
 8000c4a:      	strb.w	r6, [sp, #0x28]
 8000c4e:      	cbz	r2, 0x8000c70 <core::fmt::write::h57ce06a461283b3c+0xaa> @ imm = #0x1e
 8000c50:      	cmp	r2, #0x1
 8000c52:      	bne	0x8000c66 <core::fmt::write::h57ce06a461283b3c+0xa0> @ imm = #0x10
 8000c54:      	add.w	r2, r1, r3, lsl #3
 8000c58:      	movw	r6, #0x43f
 8000c5c:      	movt	r6, #0x800
 8000c60:      	ldr	r2, [r2, #0x4]
 8000c62:      	cmp	r2, r6
 8000c64:      	beq	0x8000c6a <core::fmt::write::h57ce06a461283b3c+0xa4> @ imm = #0x2
 8000c66:      	movs	r5, #0x0
 8000c68:      	b	0x8000c72 <core::fmt::write::h57ce06a461283b3c+0xac> @ imm = #0x6
 8000c6a:      	ldr.w	r2, [r1, r3, lsl #3]
 8000c6e:      	ldr	r3, [r2]
 8000c70:      	movs	r5, #0x1
 8000c72:      	add.w	r2, r10, r4
 8000c76:      	strd	r5, r3, [sp, #16]
 8000c7a:      	ldr	r3, [r0, #0xc]
 8000c7c:      	ldr	r0, [r2, #0x10]
 8000c7e:      	cbz	r3, 0x8000ca0 <core::fmt::write::h57ce06a461283b3c+0xda> @ imm = #0x1e
 8000c80:      	cmp	r3, #0x1
 8000c82:      	bne	0x8000c96 <core::fmt::write::h57ce06a461283b3c+0xd0> @ imm = #0x10
 8000c84:      	add.w	r3, r1, r0, lsl #3
 8000c88:      	movw	r6, #0x43f
 8000c8c:      	movt	r6, #0x800
 8000c90:      	ldr	r3, [r3, #0x4]
 8000c92:      	cmp	r3, r6
 8000c94:      	beq	0x8000c9a <core::fmt::write::h57ce06a461283b3c+0xd4> @ imm = #0x2
 8000c96:      	movs	r3, #0x0
 8000c98:      	b	0x8000ca2 <core::fmt::write::h57ce06a461283b3c+0xdc> @ imm = #0x6
 8000c9a:      	ldr.w	r0, [r1, r0, lsl #3]
 8000c9e:      	ldr	r0, [r0]
 8000ca0:      	movs	r3, #0x1
 8000ca2:      	ldr	r2, [r2]
 8000ca4:      	str	r0, [sp, #0x1c]
 8000ca6:      	ldr.w	r0, [r1, r2, lsl #3]
 8000caa:      	add.w	r1, r1, r2, lsl #3
 8000cae:      	ldr	r2, [r1, #0x4]
 8000cb0:      	add	r1, sp, #0x8
 8000cb2:      	str	r3, [sp, #0x18]
 8000cb4:      	blx	r2
 8000cb6:      	cmp	r0, #0x0
 8000cb8:      	bne	0x8000d3c <core::fmt::write::h57ce06a461283b3c+0x176> @ imm = #0x80
 8000cba:      	ldr	r0, [sp, #0x4]
 8000cbc:      	adds	r4, #0x20
 8000cbe:      	add.w	r8, r8, #0x8
 8000cc2:      	cmp	r0, r4
 8000cc4:      	bne	0x8000c1a <core::fmt::write::h57ce06a461283b3c+0x54> @ imm = #-0xae
 8000cc6:      	ldr.w	r9, [sp]
 8000cca:      	b	0x8000d1e <core::fmt::write::h57ce06a461283b3c+0x158> @ imm = #0x50
 8000ccc:      	ldr.w	r0, [r11, #0x14]
 8000cd0:      	cbz	r0, 0x8000d1a <core::fmt::write::h57ce06a461283b3c+0x154> @ imm = #0x46
 8000cd2:      	mvn	r1, #0x7
 8000cd6:      	add.w	r0, r1, r0, lsl #3
 8000cda:      	ldr.w	r2, [r11]
 8000cde:      	movs	r1, #0x1
 8000ce0:      	ldr.w	r3, [r11, #0x10]
 8000ce4:      	add.w	r5, r1, r0, lsr #3
 8000ce8:      	adds	r6, r2, #0x4
 8000cea:      	add.w	r8, sp, #0x8
 8000cee:      	adds	r4, r3, #0x4
 8000cf0:      	mov	r9, r5
 8000cf2:      	ldr	r2, [r6]
 8000cf4:      	cbz	r2, 0x8000d04 <core::fmt::write::h57ce06a461283b3c+0x13e> @ imm = #0xc
 8000cf6:      	ldrd	r0, r3, [sp, #32]
 8000cfa:      	ldr	r1, [r6, #-4]
 8000cfe:      	ldr	r3, [r3, #0xc]
 8000d00:      	blx	r3
 8000d02:      	cbnz	r0, 0x8000d3c <core::fmt::write::h57ce06a461283b3c+0x176> @ imm = #0x36
 8000d04:      	ldr	r0, [r4, #-4]
 8000d08:      	mov	r1, r8
 8000d0a:      	ldr	r2, [r4]
 8000d0c:      	blx	r2
 8000d0e:      	cbnz	r0, 0x8000d3c <core::fmt::write::h57ce06a461283b3c+0x176> @ imm = #0x2a
 8000d10:      	adds	r4, #0x8
 8000d12:      	adds	r6, #0x8
 8000d14:      	subs	r5, #0x1
 8000d16:      	bne	0x8000cf2 <core::fmt::write::h57ce06a461283b3c+0x12c> @ imm = #-0x28
 8000d18:      	b	0x8000d1e <core::fmt::write::h57ce06a461283b3c+0x158> @ imm = #0x2
 8000d1a:      	mov.w	r9, #0x0
 8000d1e:      	ldrd	r0, r1, [r11]
 8000d22:      	movs	r2, #0x0
 8000d24:      	cmp	r9, r1
 8000d26:      	it	lo
 8000d28:      	addlo.w	r2, r0, r9, lsl #3
 8000d2c:      	bhs	0x8000d46 <core::fmt::write::h57ce06a461283b3c+0x180> @ imm = #0x16
 8000d2e:      	ldrd	r0, r3, [sp, #32]
 8000d32:      	ldrd	r1, r2, [r2]
 8000d36:      	ldr	r3, [r3, #0xc]
 8000d38:      	blx	r3
 8000d3a:      	cbz	r0, 0x8000d46 <core::fmt::write::h57ce06a461283b3c+0x180> @ imm = #0x8
 8000d3c:      	movs	r0, #0x1
 8000d3e:      	add	sp, #0x2c
 8000d40:      	pop.w	{r8, r9, r10, r11}
 8000d44:      	pop	{r4, r5, r6, r7, pc}
 8000d46:      	movs	r0, #0x0
 8000d48:      	add	sp, #0x2c
 8000d4a:      	pop.w	{r8, r9, r10, r11}
 8000d4e:      	pop	{r4, r5, r6, r7, pc}

08000d50 <<&T as core::fmt::Display>::fmt::h3d9984686708d6bf>:
 8000d50:      	push	{r4, r5, r6, r7, lr}
 8000d52:      	add	r7, sp, #0xc
 8000d54:      	push.w	{r8, r9, r11}
 8000d58:      	sub	sp, #0x18
 8000d5a:      	ldr.w	lr, [r0]
 8000d5e:      	mov	r2, sp
 8000d60:      	ldrd	r12, r1, [r1, #24]
 8000d64:      	mov	r3, r2
 8000d66:      	ldm.w	lr, {r0, r4, r5, r6, r8, r9}
 8000d6a:      	stm.w	r3, {r0, r4, r5, r6, r8, r9}
 8000d6e:      	mov	r0, r12
 8000d70:      	bl	0x8000bc6 <core::fmt::write::h57ce06a461283b3c> @ imm = #-0x1ae
 8000d74:      	add	sp, #0x18
 8000d76:      	pop.w	{r8, r9, r11}
 8000d7a:      	pop	{r4, r5, r6, r7, pc}

08000d7c <<&T as core::fmt::Display>::fmt::h96a382e6e4e6a291>:
 8000d7c:      	ldr	r0, [r0]
 8000d7e:      	mov	r3, r1
 8000d80:      	ldrd	r1, r2, [r0]
 8000d84:      	mov	r0, r3
 8000d86:      	b.w	0x8000734 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b> @ imm = #-0x656

08000d8a <ResetTrampoline>:
 8000d8a:      	push	{r7, lr}
 8000d8c:      	mov	r7, sp
 8000d8e:      	bl	0x8000234 <main>        @ imm = #-0xb5e
 8000d92:      	trap

08000d94 <WWDG>:
 8000d94:      	b	0x8000d94 <WWDG>        @ imm = #-0x4

08000d96 <__pre_init>:
 8000d96:      	bx	lr

08000d98 <rust_begin_unwind>:
 8000d98:      	push	{r7, lr}
 8000d9a:      	mov	r7, sp
 8000d9c:      	sub	sp, #0x30
 8000d9e:      	str	r0, [sp, #0x4]
 8000da0:      	bl	0x8001162 <__cpsid>     @ imm = #0x3be
 8000da4:      	movw	r0, #0xdeb
 8000da8:      	movw	r1, #0x1410
 8000dac:      	movt	r0, #0x800
 8000db0:      	add	r2, sp, #0x18
 8000db2:      	str	r0, [sp, #0xc]
 8000db4:      	add	r0, sp, #0x4
 8000db6:      	str	r0, [sp, #0x8]
 8000db8:      	mov.w	r0, #0xe0000000
 8000dbc:      	str	r0, [sp, #0x10]
 8000dbe:      	add	r0, sp, #0x10
 8000dc0:      	str	r0, [sp, #0x14]
 8000dc2:      	movs	r0, #0x1
 8000dc4:      	str	r0, [sp, #0x2c]
 8000dc6:      	add	r0, sp, #0x8
 8000dc8:      	str	r0, [sp, #0x28]
 8000dca:      	movs	r0, #0x0
 8000dcc:      	strd	r0, r0, [sp, #32]
 8000dd0:      	movs	r0, #0x2
 8000dd2:      	str	r0, [sp, #0x1c]
 8000dd4:      	movw	r0, #0x142c
 8000dd8:      	movt	r0, #0x800
 8000ddc:      	movt	r1, #0x800
 8000de0:      	str	r0, [sp, #0x18]
 8000de2:      	add	r0, sp, #0x14
 8000de4:      	bl	0x8000bc6 <core::fmt::write::h57ce06a461283b3c> @ imm = #-0x222
 8000de8:      	b	0x8000de8 <rust_begin_unwind+0x50> @ imm = #-0x4

08000dea <<&T as core::fmt::Display>::fmt::hce163d9fc629b0e2>:
 8000dea:      	push	{r4, r5, r6, r7, lr}
 8000dec:      	add	r7, sp, #0xc
 8000dee:      	str	r8, [sp, #-4]!
 8000df2:      	sub	sp, #0x38
 8000df4:      	ldrd	r4, r5, [r1, #24]
 8000df8:      	movw	r1, #0x1328
 8000dfc:      	ldr	r3, [r5, #0xc]
 8000dfe:      	movt	r1, #0x800
 8000e02:      	ldr.w	r8, [r0]
 8000e06:      	movs	r2, #0xc
 8000e08:      	mov	r0, r4
 8000e0a:      	blx	r3
 8000e0c:      	cbz	r0, 0x8000e1a <<&T as core::fmt::Display>::fmt::hce163d9fc629b0e2+0x30> @ imm = #0xa
 8000e0e:      	movs	r6, #0x1
 8000e10:      	mov	r0, r6
 8000e12:      	add	sp, #0x38
 8000e14:      	ldr	r8, [sp], #4
 8000e18:      	pop	{r4, r5, r6, r7, pc}
 8000e1a:      	ldr.w	r0, [r8, #0x8]
 8000e1e:      	cbz	r0, 0x8000e2c <<&T as core::fmt::Display>::fmt::hce163d9fc629b0e2+0x42> @ imm = #0xa
 8000e20:      	str	r0, [sp, #0x4]
 8000e22:      	movw	r0, #0xd51
 8000e26:      	movt	r0, #0x800
 8000e2a:      	b	0x8000e58 <<&T as core::fmt::Display>::fmt::hce163d9fc629b0e2+0x6e> @ imm = #0x2a
 8000e2c:      	ldrd	r6, r0, [r8]
 8000e30:      	ldr	r1, [r0, #0xc]
 8000e32:      	mov	r0, r6
 8000e34:      	blx	r1
 8000e36:      	movw	r2, #0xa91e
 8000e3a:      	movt	r2, #0x7ef2
 8000e3e:      	eors	r1, r2
 8000e40:      	movw	r2, #0xbcf4
 8000e44:      	movt	r2, #0xecc7
 8000e48:      	eors	r0, r2
 8000e4a:      	orrs	r0, r1
 8000e4c:      	bne	0x8000e88 <<&T as core::fmt::Display>::fmt::hce163d9fc629b0e2+0x9e> @ imm = #0x38
 8000e4e:      	movw	r0, #0xd7d
 8000e52:      	str	r6, [sp, #0x4]
 8000e54:      	movt	r0, #0x800
 8000e58:      	str	r0, [sp, #0xc]
 8000e5a:      	add	r0, sp, #0x4
 8000e5c:      	str	r0, [sp, #0x8]
 8000e5e:      	add	r0, sp, #0x8
 8000e60:      	str	r0, [sp, #0x30]
 8000e62:      	movs	r0, #0x0
 8000e64:      	str	r0, [sp, #0x2c]
 8000e66:      	add	r2, sp, #0x20
 8000e68:      	str	r0, [sp, #0x28]
 8000e6a:      	movs	r0, #0x2
 8000e6c:      	str	r0, [sp, #0x24]
 8000e6e:      	movw	r0, #0x1338
 8000e72:      	movt	r0, #0x800
 8000e76:      	movs	r6, #0x1
 8000e78:      	str	r0, [sp, #0x20]
 8000e7a:      	mov	r0, r4
 8000e7c:      	mov	r1, r5
 8000e7e:      	str	r6, [sp, #0x34]
 8000e80:      	bl	0x8000bc6 <core::fmt::write::h57ce06a461283b3c> @ imm = #-0x2be
 8000e84:      	cmp	r0, #0x0
 8000e86:      	bne	0x8000e10 <<&T as core::fmt::Display>::fmt::hce163d9fc629b0e2+0x26> @ imm = #-0x7a
 8000e88:      	ldr.w	r0, [r8, #0xc]
 8000e8c:      	movw	r1, #0x443
 8000e90:      	movt	r1, #0x800
 8000e94:      	add.w	r2, r0, #0xc
 8000e98:      	str	r1, [sp, #0x1c]
 8000e9a:      	strd	r1, r2, [sp, #20]
 8000e9e:      	add.w	r1, r0, #0x8
 8000ea2:      	str	r1, [sp, #0x10]
 8000ea4:      	movw	r1, #0xbbb
 8000ea8:      	movt	r1, #0x800
 8000eac:      	add	r2, sp, #0x20
 8000eae:      	strd	r0, r1, [sp, #8]
 8000eb2:      	add	r1, sp, #0x8
 8000eb4:      	movs	r0, #0x3
 8000eb6:      	str	r1, [sp, #0x30]
 8000eb8:      	movs	r1, #0x0
 8000eba:      	str	r0, [sp, #0x34]
 8000ebc:      	strd	r0, r1, [sp, #36]
 8000ec0:      	movw	r0, #0x1300
 8000ec4:      	movt	r0, #0x800
 8000ec8:      	str	r1, [sp, #0x2c]
 8000eca:      	str	r0, [sp, #0x20]
 8000ecc:      	mov	r0, r4
 8000ece:      	mov	r1, r5
 8000ed0:      	bl	0x8000bc6 <core::fmt::write::h57ce06a461283b3c> @ imm = #-0x30e
 8000ed4:      	mov	r6, r0
 8000ed6:      	mov	r0, r6
 8000ed8:      	add	sp, #0x38
 8000eda:      	ldr	r8, [sp], #4
 8000ede:      	pop	{r4, r5, r6, r7, pc}

08000ee0 <core::ptr::drop_in_place<&mut cortex_m::itm::Port>::h7d823aa99c0f7ddf>:
 8000ee0:      	bx	lr

08000ee2 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9>:
 8000ee2:      	push	{r4, r5, r7, lr}
 8000ee4:      	add	r7, sp, #0x8
 8000ee6:      	cmp	r2, #0x0
 8000ee8:      	beq.w	0x8000fee <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x10c> @ imm = #0x102
 8000eec:      	ldr	r0, [r0]
 8000eee:      	lsls	r3, r1, #0x1f
 8000ef0:      	ldr	r0, [r0]
 8000ef2:      	beq	0x8000f16 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x34> @ imm = #0x20
 8000ef4:      	ldr	r3, [r0]
 8000ef6:      	lsls	r3, r3, #0x1f
 8000ef8:      	itttt	eq
 8000efa:      	ldreq	r3, [r0]
 8000efc:      	lslseq.w	r3, r3, #0x1f
 8000f00:      	ldreq	r3, [r0]
 8000f02:      	lslseq.w	r3, r3, #0x1f
 8000f06:      	bne	0x8000f0e <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x2c> @ imm = #0x4
 8000f08:      	ldr	r3, [r0]
 8000f0a:      	lsls	r3, r3, #0x1f
 8000f0c:      	beq	0x8000ef4 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x12> @ imm = #-0x1c
 8000f0e:      	ldrb	r3, [r1], #1
 8000f12:      	subs	r2, #0x1
 8000f14:      	strb	r3, [r0]
 8000f16:      	and	r3, r1, #0x3
 8000f1a:      	cmp	r3, #0x2
 8000f1c:      	bne	0x8000f44 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x62> @ imm = #0x24
 8000f1e:      	cmp	r2, #0x2
 8000f20:      	blo	0x8000fcc <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0xea> @ imm = #0xa8
 8000f22:      	ldr	r3, [r0]
 8000f24:      	lsls	r3, r3, #0x1f
 8000f26:      	itttt	eq
 8000f28:      	ldreq	r3, [r0]
 8000f2a:      	lslseq.w	r3, r3, #0x1f
 8000f2e:      	ldreq	r3, [r0]
 8000f30:      	lslseq.w	r3, r3, #0x1f
 8000f34:      	bne	0x8000f3c <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x5a> @ imm = #0x4
 8000f36:      	ldr	r3, [r0]
 8000f38:      	lsls	r3, r3, #0x1f
 8000f3a:      	beq	0x8000f22 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x40> @ imm = #-0x1c
 8000f3c:      	ldrh	r3, [r1], #2
 8000f40:      	subs	r2, #0x2
 8000f42:      	strh	r3, [r0]
 8000f44:      	cmp	r2, #0x0
 8000f46:      	beq	0x8000fee <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x10c> @ imm = #0xa4
 8000f48:      	bic	r12, r2, #0x3
 8000f4c:      	lsrs.w	lr, r2, #0x2
 8000f50:      	beq	0x8000f80 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x9e> @ imm = #0x2c
 8000f52:      	movs	r3, #0x0
 8000f54:      	mov	r4, r1
 8000f56:      	b	0x8000f64 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x82> @ imm = #0xa
 8000f58:      	ldr	r5, [r4], #4
 8000f5c:      	adds	r3, #0x1
 8000f5e:      	cmp	r3, lr
 8000f60:      	str	r5, [r0]
 8000f62:      	beq	0x8000f80 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x9e> @ imm = #0x1a
 8000f64:      	ldr	r5, [r0]
 8000f66:      	lsls	r5, r5, #0x1f
 8000f68:      	itttt	eq
 8000f6a:      	ldreq	r5, [r0]
 8000f6c:      	lslseq.w	r5, r5, #0x1f
 8000f70:      	ldreq	r5, [r0]
 8000f72:      	lslseq.w	r5, r5, #0x1f
 8000f76:      	bne	0x8000f58 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x76> @ imm = #-0x22
 8000f78:      	ldr	r5, [r0]
 8000f7a:      	lsls	r5, r5, #0x1f
 8000f7c:      	beq	0x8000f64 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x82> @ imm = #-0x1c
 8000f7e:      	b	0x8000f58 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x76> @ imm = #-0x2a
 8000f80:      	and	r2, r2, #0x3
 8000f84:      	add	r1, r12
 8000f86:      	cmp	r2, #0x2
 8000f88:      	blo	0x8000fac <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0xca> @ imm = #0x20
 8000f8a:      	ldr	r3, [r0]
 8000f8c:      	lsls	r3, r3, #0x1f
 8000f8e:      	itttt	eq
 8000f90:      	ldreq	r3, [r0]
 8000f92:      	lslseq.w	r3, r3, #0x1f
 8000f96:      	ldreq	r3, [r0]
 8000f98:      	lslseq.w	r3, r3, #0x1f
 8000f9c:      	bne	0x8000fa4 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0xc2> @ imm = #0x4
 8000f9e:      	ldr	r3, [r0]
 8000fa0:      	lsls	r3, r3, #0x1f
 8000fa2:      	beq	0x8000f8a <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0xa8> @ imm = #-0x1c
 8000fa4:      	ldrh	r3, [r1], #2
 8000fa8:      	subs	r2, #0x2
 8000faa:      	strh	r3, [r0]
 8000fac:      	cmp	r2, #0x1
 8000fae:      	bne	0x8000fee <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x10c> @ imm = #0x3c
 8000fb0:      	ldr	r2, [r0]
 8000fb2:      	lsls	r2, r2, #0x1f
 8000fb4:      	itttt	eq
 8000fb6:      	ldreq	r2, [r0]
 8000fb8:      	lslseq.w	r2, r2, #0x1f
 8000fbc:      	ldreq	r2, [r0]
 8000fbe:      	lslseq.w	r2, r2, #0x1f
 8000fc2:      	bne	0x8000fea <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x108> @ imm = #0x24
 8000fc4:      	ldr	r2, [r0]
 8000fc6:      	lsls	r2, r2, #0x1f
 8000fc8:      	beq	0x8000fb0 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0xce> @ imm = #-0x1c
 8000fca:      	b	0x8000fea <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x108> @ imm = #0x1c
 8000fcc:      	cmp	r2, #0x1
 8000fce:      	bne	0x8000fee <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x10c> @ imm = #0x1c
 8000fd0:      	ldr	r2, [r0]
 8000fd2:      	lsls	r2, r2, #0x1f
 8000fd4:      	bne	0x8000fea <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x108> @ imm = #0x12
 8000fd6:      	ldr	r2, [r0]
 8000fd8:      	lsls	r2, r2, #0x1f
 8000fda:      	itt	eq
 8000fdc:      	ldreq	r2, [r0]
 8000fde:      	lslseq.w	r2, r2, #0x1f
 8000fe2:      	bne	0x8000fea <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x108> @ imm = #0x4
 8000fe4:      	ldr	r2, [r0]
 8000fe6:      	lsls	r2, r2, #0x1f
 8000fe8:      	beq	0x8000fd0 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0xee> @ imm = #-0x1c
 8000fea:      	ldrb	r1, [r1]
 8000fec:      	strb	r1, [r0]
 8000fee:      	movs	r0, #0x0
 8000ff0:      	pop	{r4, r5, r7, pc}

08000ff2 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d>:
 8000ff2:      	push	{r4, r6, r7, lr}
 8000ff4:      	add	r7, sp, #0x8
 8000ff6:      	sub	sp, #0x4
 8000ff8:      	ldr	r0, [r0]
 8000ffa:      	movs	r2, #0x0
 8000ffc:      	cmp	r1, #0x80
 8000ffe:      	str	r2, [sp]
 8001000:      	bhs	0x8001018 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x26> @ imm = #0x14
 8001002:      	strb.w	r1, [sp]
 8001006:      	movs	r1, #0x1
 8001008:      	mov.w	lr, #0x1
 800100c:      	ldr	r0, [r0]
 800100e:      	and	r12, lr, #0x4
 8001012:      	cmp	r1, #0x0
 8001014:      	bne	0x80010a0 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xae> @ imm = #0x88
 8001016:      	b	0x8001100 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x10e> @ imm = #0xe6
 8001018:      	cmp.w	r1, #0x800
 800101c:      	bhs	0x8001038 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x46> @ imm = #0x18
 800101e:      	mov.w	lr, #0x2
 8001022:      	mov	r2, r1
 8001024:      	bfi	r2, lr, #6, #26
 8001028:      	strb.w	r2, [sp, #0x1]
 800102c:      	movs	r2, #0xc0
 800102e:      	orr.w	r1, r2, r1, lsr #6
 8001032:      	strb.w	r1, [sp]
 8001036:      	b	0x8001062 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x70> @ imm = #0x28
 8001038:      	movs	r2, #0x2
 800103a:      	mov	r3, r1
 800103c:      	bfi	r3, r2, #6, #26
 8001040:      	cmp.w	r1, #0x10000
 8001044:      	bhs	0x8001070 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x7e> @ imm = #0x28
 8001046:      	strb.w	r3, [sp, #0x2]
 800104a:      	lsrs	r3, r1, #0x6
 800104c:      	bfi	r3, r2, #6, #26
 8001050:      	movs	r2, #0xe0
 8001052:      	orr.w	r1, r2, r1, lsr #12
 8001056:      	strb.w	r1, [sp]
 800105a:      	strb.w	r3, [sp, #0x1]
 800105e:      	mov.w	lr, #0x3
 8001062:      	movs	r1, #0x1
 8001064:      	ldr	r0, [r0]
 8001066:      	and	r12, lr, #0x4
 800106a:      	cmp	r1, #0x0
 800106c:      	beq	0x8001100 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x10e> @ imm = #0x90
 800106e:      	b	0x80010a0 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xae> @ imm = #0x2e
 8001070:      	strb.w	r3, [sp, #0x3]
 8001074:      	lsrs	r3, r1, #0x6
 8001076:      	bfi	r3, r2, #6, #26
 800107a:      	strb.w	r3, [sp, #0x2]
 800107e:      	lsrs	r3, r1, #0xc
 8001080:      	mov.w	lr, #0x4
 8001084:      	bfi	r3, r2, #6, #26
 8001088:      	movs	r2, #0xf0
 800108a:      	orr.w	r1, r2, r1, lsr #18
 800108e:      	strb.w	r1, [sp]
 8001092:      	movs	r1, #0x0
 8001094:      	strb.w	r3, [sp, #0x1]
 8001098:      	ldr	r0, [r0]
 800109a:      	and	r12, lr, #0x4
 800109e:      	cbz	r1, 0x8001100 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x10e> @ imm = #0x5e
 80010a0:      	mov	r1, sp
 80010a2:      	and	r2, lr, #0x3
 80010a6:      	add	r1, r12
 80010a8:      	cmp	r2, #0x2
 80010aa:      	blo	0x80010d8 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xe6> @ imm = #0x2a
 80010ac:      	ldr	r3, [r0]
 80010ae:      	lsls	r3, r3, #0x1f
 80010b0:      	itttt	eq
 80010b2:      	ldreq	r3, [r0]
 80010b4:      	lslseq.w	r3, r3, #0x1f
 80010b8:      	ldreq	r3, [r0]
 80010ba:      	lslseq.w	r3, r3, #0x1f
 80010be:      	bne	0x80010c6 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xd4> @ imm = #0x4
 80010c0:      	ldr	r3, [r0]
 80010c2:      	lsls	r3, r3, #0x1f
 80010c4:      	beq	0x80010ac <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xba> @ imm = #-0x1c
 80010c6:      	ldrh	r3, [r1], #2
 80010ca:      	subs	r2, #0x2
 80010cc:      	strh	r3, [r0]
 80010ce:      	cmp	r2, #0x1
 80010d0:      	beq	0x80010dc <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xea> @ imm = #0x8
 80010d2:      	movs	r0, #0x0
 80010d4:      	add	sp, #0x4
 80010d6:      	pop	{r4, r6, r7, pc}
 80010d8:      	cmp	r2, #0x1
 80010da:      	bne	0x80010d2 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xe0> @ imm = #-0xc
 80010dc:      	ldr	r2, [r0]
 80010de:      	lsls	r2, r2, #0x1f
 80010e0:      	itttt	eq
 80010e2:      	ldreq	r2, [r0]
 80010e4:      	lslseq.w	r2, r2, #0x1f
 80010e8:      	ldreq	r2, [r0]
 80010ea:      	lslseq.w	r2, r2, #0x1f
 80010ee:      	bne	0x80010f6 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x104> @ imm = #0x4
 80010f0:      	ldr	r2, [r0]
 80010f2:      	lsls	r2, r2, #0x1f
 80010f4:      	beq	0x80010dc <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xea> @ imm = #-0x1c
 80010f6:      	ldrb	r1, [r1]
 80010f8:      	strb	r1, [r0]
 80010fa:      	movs	r0, #0x0
 80010fc:      	add	sp, #0x4
 80010fe:      	pop	{r4, r6, r7, pc}
 8001100:      	lsr.w	r3, lr, #0x2
 8001104:      	movs	r1, #0x0
 8001106:      	mov	r2, sp
 8001108:      	b	0x8001116 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x124> @ imm = #0xa
 800110a:      	ldr	r4, [r2], #4
 800110e:      	adds	r1, #0x1
 8001110:      	cmp	r1, r3
 8001112:      	str	r4, [r0]
 8001114:      	beq	0x80010a0 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xae> @ imm = #-0x78
 8001116:      	ldr	r4, [r0]
 8001118:      	lsls	r4, r4, #0x1f
 800111a:      	itttt	eq
 800111c:      	ldreq	r4, [r0]
 800111e:      	lslseq.w	r4, r4, #0x1f
 8001122:      	ldreq	r4, [r0]
 8001124:      	lslseq.w	r4, r4, #0x1f
 8001128:      	bne	0x800110a <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x118> @ imm = #-0x22
 800112a:      	ldr	r4, [r0]
 800112c:      	lsls	r4, r4, #0x1f
 800112e:      	beq	0x8001116 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x124> @ imm = #-0x1c
 8001130:      	b	0x800110a <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x118> @ imm = #-0x2a

08001132 <<&mut W as core::fmt::Write>::write_fmt::h21d4247d0230ed6f>:
 8001132:      	push	{r4, r5, r6, r7, lr}
 8001134:      	add	r7, sp, #0xc
 8001136:      	str	r11, [sp, #-4]!
 800113a:      	sub	sp, #0x20
 800113c:      	ldr	r0, [r0]
 800113e:      	add	r2, sp, #0x8
 8001140:      	str	r0, [sp, #0x4]
 8001142:      	ldm.w	r1, {r3, r4, r5, r6, r12, lr}
 8001146:      	mov	r0, r2
 8001148:      	movw	r1, #0x1410
 800114c:      	movt	r1, #0x800
 8001150:      	stm.w	r0, {r3, r4, r5, r6, r12, lr}
 8001154:      	add	r0, sp, #0x4
 8001156:      	bl	0x8000bc6 <core::fmt::write::h57ce06a461283b3c> @ imm = #-0x594
 800115a:      	add	sp, #0x20
 800115c:      	ldr	r11, [sp], #4
 8001160:      	pop	{r4, r5, r6, r7, pc}

08001162 <__cpsid>:
 8001162:      	cpsid i
 8001164:      	bx	lr

08001166 <__cpsie>:
 8001166:      	cpsie i
 8001168:      	bx	lr

0800116a <__nop>:
 800116a:      	nop
 800116c:      	bx	lr

0800116e <__primask_r>:
 800116e:      	mrs	r0, primask
 8001172:      	bx	lr

08001174 <__aeabi_memcpy>:
 8001174:      	b.w	0x80011fe <memcpy>      @ imm = #0x86

08001178 <__aeabi_memcpy4>:
 8001178:      	push	{r4, r5, r7, lr}
 800117a:      	add	r7, sp, #0x8
 800117c:      	cmp	r2, #0x4
 800117e:      	blo	0x80011e4 <__aeabi_memcpy4+0x6c> @ imm = #0x62
 8001180:      	sub.w	r12, r2, #0x4
 8001184:      	movs	r3, #0x1
 8001186:      	add.w	r3, r3, r12, lsr #2
 800118a:      	ands	lr, r3, #0x3
 800118e:      	beq	0x80011c0 <__aeabi_memcpy4+0x48> @ imm = #0x2e
 8001190:      	mov	r3, r1
 8001192:      	mov	r4, r0
 8001194:      	ldr	r5, [r3], #4
 8001198:      	cmp.w	lr, #0x1
 800119c:      	str	r5, [r4], #4
 80011a0:      	bne	0x80011b0 <__aeabi_memcpy4+0x38> @ imm = #0xc
 80011a2:      	mov	r2, r12
 80011a4:      	mov	r0, r4
 80011a6:      	mov	r1, r3
 80011a8:      	cmp.w	r12, #0xc
 80011ac:      	bhs	0x80011c6 <__aeabi_memcpy4+0x4e> @ imm = #0x16
 80011ae:      	b	0x80011e4 <__aeabi_memcpy4+0x6c> @ imm = #0x32
 80011b0:      	ldr	r3, [r1, #0x4]
 80011b2:      	cmp.w	lr, #0x2
 80011b6:      	str	r3, [r0, #0x4]
 80011b8:      	bne	0x80011ec <__aeabi_memcpy4+0x74> @ imm = #0x30
 80011ba:      	subs	r2, #0x8
 80011bc:      	adds	r1, #0x8
 80011be:      	adds	r0, #0x8
 80011c0:      	cmp.w	r12, #0xc
 80011c4:      	blo	0x80011e4 <__aeabi_memcpy4+0x6c> @ imm = #0x1c
 80011c6:      	ldr	r3, [r1]
 80011c8:      	subs	r2, #0x10
 80011ca:      	str	r3, [r0]
 80011cc:      	cmp	r2, #0x3
 80011ce:      	ldr	r3, [r1, #0x4]
 80011d0:      	str	r3, [r0, #0x4]
 80011d2:      	ldr	r3, [r1, #0x8]
 80011d4:      	str	r3, [r0, #0x8]
 80011d6:      	ldr	r3, [r1, #0xc]
 80011d8:      	add.w	r1, r1, #0x10
 80011dc:      	str	r3, [r0, #0xc]
 80011de:      	add.w	r0, r0, #0x10
 80011e2:      	bhi	0x80011c6 <__aeabi_memcpy4+0x4e> @ imm = #-0x20
 80011e4:      	pop.w	{r4, r5, r7, lr}
 80011e8:      	b.w	0x8001174 <__aeabi_memcpy> @ imm = #-0x78
 80011ec:      	ldr	r3, [r1, #0x8]
 80011ee:      	subs	r2, #0xc
 80011f0:      	str	r3, [r0, #0x8]
 80011f2:      	adds	r1, #0xc
 80011f4:      	adds	r0, #0xc
 80011f6:      	cmp.w	r12, #0xc
 80011fa:      	bhs	0x80011c6 <__aeabi_memcpy4+0x4e> @ imm = #-0x38
 80011fc:      	b	0x80011e4 <__aeabi_memcpy4+0x6c> @ imm = #-0x1c

080011fe <memcpy>:
 80011fe:      	push	{r4, r5, r6, r7, lr}
 8001200:      	add	r7, sp, #0xc
 8001202:      	str	r8, [sp, #-4]!
 8001206:      	cbz	r2, 0x800121a <memcpy+0x1c> @ imm = #0x10
 8001208:      	subs	r3, r2, #0x1
 800120a:      	and	r12, r2, #0x3
 800120e:      	cmp	r3, #0x3
 8001210:      	bhs	0x8001220 <memcpy+0x22> @ imm = #0xc
 8001212:      	movs	r2, #0x0
 8001214:      	cmp.w	r12, #0x0
 8001218:      	bne	0x800125a <memcpy+0x5c> @ imm = #0x3e
 800121a:      	ldr	r8, [sp], #4
 800121e:      	pop	{r4, r5, r6, r7, pc}
 8001220:      	bic	r2, r2, #0x3
 8001224:      	add.w	lr, r0, #0x1
 8001228:      	rsbs	r4, r2, #0
 800122a:      	add.w	r8, r1, #0x1
 800122e:      	mvn	r2, #0x3
 8001232:      	add.w	r5, r8, r2
 8001236:      	add.w	r3, lr, r2
 800123a:      	adds	r2, #0x4
 800123c:      	ldrb	r6, [r5, #0x3]
 800123e:      	strb	r6, [r3, #0x3]
 8001240:      	ldrb	r6, [r5, #0x4]
 8001242:      	strb	r6, [r3, #0x4]
 8001244:      	ldrb	r6, [r5, #0x5]
 8001246:      	strb	r6, [r3, #0x5]
 8001248:      	ldrb	r5, [r5, #0x6]
 800124a:      	strb	r5, [r3, #0x6]
 800124c:      	adds	r3, r4, r2
 800124e:      	adds	r3, #0x4
 8001250:      	bne	0x8001232 <memcpy+0x34> @ imm = #-0x22
 8001252:      	adds	r2, #0x4
 8001254:      	cmp.w	r12, #0x0
 8001258:      	beq	0x800121a <memcpy+0x1c> @ imm = #-0x42
 800125a:      	ldrb	r3, [r1, r2]
 800125c:      	cmp.w	r12, #0x1
 8001260:      	strb	r3, [r0, r2]
 8001262:      	beq	0x800121a <memcpy+0x1c> @ imm = #-0x4c
 8001264:      	adds	r3, r2, #0x1
 8001266:      	cmp.w	r12, #0x2
 800126a:      	ldrb	r6, [r1, r3]
 800126c:      	strb	r6, [r0, r3]
 800126e:      	beq	0x800121a <memcpy+0x1c> @ imm = #-0x58
 8001270:      	adds	r2, #0x2
 8001272:      	ldrb	r1, [r1, r2]
 8001274:      	strb	r1, [r0, r2]
 8001276:      	ldr	r8, [sp], #4
 800127a:      	pop	{r4, r5, r6, r7, pc}

0800127c <HardFaultTrampoline>:
 800127c:      	mov	r0, lr
 800127e:      	movs	r1, #0x4
 8001280:      	tst	r0, r1
 8001282:      	bne	0x800128a <HardFaultTrampoline+0xe> @ imm = #0x4
 8001284:      	mrs	r0, msp
 8001288:      	b	0x8001290 <HardFault_>  @ imm = #0x4
 800128a:      	mrs	r0, psp
 800128e:      	b	0x8001290 <HardFault_>  @ imm = #-0x2

08001290 <HardFault_>:
 8001290:      	b	0x8001290 <HardFault_>  @ imm = #-0x4
 8001292:      	bmi	0x800123e <memcpy+0x40> @ imm = #-0x58
