
registers:	file format elf32-littlearm

Disassembly of section .text:

08000194 <Reset>:
 8000194:      	push	{r7, lr}
 8000196:      	mov	r7, sp
 8000198:      	bl	0x8000d26 <__pre_init>  @ imm = #0xb8a
 800019c:      	movw	r0, #0x4
 80001a0:      	movw	r1, #0x0
 80001a4:      	movt	r0, #0x2000
 80001a8:      	movt	r1, #0x2000
 80001ac:      	cmp	r1, r0
 80001ae:      	bhs	0x80001d8 <Reset+0x44>  @ imm = #0x26
 80001b0:      	movw	r1, #0x0
 80001b4:      	movs	r2, #0x0
 80001b6:      	movt	r1, #0x2000
 80001ba:      	str	r2, [r1], #4
 80001be:      	cmp	r1, r0
 80001c0:      	itttt	lo
 80001c2:      	strlo	r2, [r1], #4
 80001c6:      	cmplo	r1, r0
 80001c8:      	strlo	r2, [r1], #4
 80001cc:      	cmplo	r1, r0
 80001ce:      	bhs	0x80001d8 <Reset+0x44>  @ imm = #0x6
 80001d0:      	str	r2, [r1], #4
 80001d4:      	cmp	r1, r0
 80001d6:      	blo	0x80001ba <Reset+0x26>  @ imm = #-0x20
 80001d8:      	movw	r1, #0x0
 80001dc:      	movw	r0, #0x0
 80001e0:      	movt	r1, #0x2000
 80001e4:      	movt	r0, #0x2000
 80001e8:      	cmp	r0, r1
 80001ea:      	bhs	0x800020a <Reset+0x76>  @ imm = #0x1c
 80001ec:      	adds	r2, r0, #0x4
 80001ee:      	cmp	r1, r2
 80001f0:      	it	hi
 80001f2:      	movhi	r2, r1
 80001f4:      	mvns	r1, r0
 80001f6:      	add	r1, r2
 80001f8:      	adds	r1, #0x4
 80001fa:      	bic	r2, r1, #0x3
 80001fe:      	movw	r1, #0x13d0
 8000202:      	movt	r1, #0x800
 8000206:      	bl	0x8001104 <__aeabi_memcpy4> @ imm = #0xefa
 800020a:      	movw	r0, #0xed88
 800020e:      	movt	r0, #0xe000
 8000212:      	ldr	r1, [r0]
 8000214:      	orr	r1, r1, #0xf00000
 8000218:      	str	r1, [r0]
 800021a:      	bl	0x8000d1a <ResetTrampoline> @ imm = #0xafc
 800021e:      	trap

08000220 <main>:
 8000220:      	push	{r7, lr}
 8000222:      	mov	r7, sp
 8000224:      	bl	0x800022a <registers::__cortex_m_rt_main::h5a6ad6ae5732c492> @ imm = #0x2
 8000228:      	trap

0800022a <registers::__cortex_m_rt_main::h5a6ad6ae5732c492>:
 800022a:      	push	{r7, lr}
 800022c:      	mov	r7, sp
 800022e:      	bl	0x8000254 <aux7::init::h01a0b9f757091d37> @ imm = #0x22
 8000232:      	movw	r0, #0x1018
 8000236:      	mov.w	r1, #0x200
 800023a:      	movt	r0, #0x4800
 800023e:      	str	r1, [r0]
 8000240:      	mov.w	r1, #0x800
 8000244:      	str	r1, [r0]
 8000246:      	mov.w	r1, #0x2000000
 800024a:      	str	r1, [r0]
 800024c:      	mov.w	r1, #0x8000000
 8000250:      	str	r1, [r0]
 8000252:      	b	0x8000252 <registers::__cortex_m_rt_main::h5a6ad6ae5732c492+0x28> @ imm = #-0x4

08000254 <aux7::init::h01a0b9f757091d37>:
 8000254:      	push	{r4, r5, r6, r7, lr}
 8000256:      	add	r7, sp, #0xc
 8000258:      	push.w	{r8, r9, r11}
 800025c:      	bl	0x80010fa <__primask_r> @ imm = #0xe9a
 8000260:      	mov	r4, r0
 8000262:      	bl	0x80010f2 <__cpsid>     @ imm = #0xe8c
 8000266:      	movw	r8, #0x0
 800026a:      	and	r0, r4, #0x1
 800026e:      	movt	r8, #0x2000
 8000272:      	ldrb.w	r5, [r8]
 8000276:      	cmp	r5, #0x0
 8000278:      	itt	eq
 800027a:      	moveq	r1, #0x1
 800027c:      	strbeq.w	r1, [r8]
 8000280:      	cmp	r0, #0x0
 8000282:      	it	eq
 8000284:      	bleq	0x80010f6 <__cpsie>     @ imm = #0xe6e
 8000288:      	cmp	r5, #0x0
 800028a:      	bne.w	0x80003c6 <aux7::init::h01a0b9f757091d37+0x172> @ imm = #0x138
 800028e:      	movw	r0, #0x1028
 8000292:      	movs	r6, #0x1
 8000294:      	movt	r0, #0x4002
 8000298:      	ldr	r1, [r0, #-20]
 800029c:      	orr	r1, r1, #0x200000
 80002a0:      	str	r1, [r0, #-20]
 80002a4:      	ldr	r1, [r0]
 80002a6:      	orr	r1, r1, #0x200000
 80002aa:      	str	r1, [r0]
 80002ac:      	ldr	r1, [r0]
 80002ae:      	bic	r1, r1, #0x200000
 80002b2:      	str	r1, [r0]
 80002b4:      	movw	r0, #0x1000
 80002b8:      	movt	r0, #0x4800
 80002bc:      	ldr	r1, [r0]
 80002be:      	bfi	r1, r6, #18, #2
 80002c2:      	str	r1, [r0]
 80002c4:      	ldr	r1, [r0, #0x4]
 80002c6:      	bic	r1, r1, #0x200
 80002ca:      	str	r1, [r0, #0x4]
 80002cc:      	ldr	r1, [r0]
 80002ce:      	bfi	r1, r6, #16, #2
 80002d2:      	str	r1, [r0]
 80002d4:      	ldr	r1, [r0, #0x4]
 80002d6:      	bic	r1, r1, #0x100
 80002da:      	str	r1, [r0, #0x4]
 80002dc:      	ldr	r1, [r0]
 80002de:      	bfi	r1, r6, #20, #2
 80002e2:      	str	r1, [r0]
 80002e4:      	ldr	r1, [r0, #0x4]
 80002e6:      	bic	r1, r1, #0x400
 80002ea:      	str	r1, [r0, #0x4]
 80002ec:      	ldr	r1, [r0]
 80002ee:      	bfi	r1, r6, #30, #2
 80002f2:      	str	r1, [r0]
 80002f4:      	ldr	r1, [r0, #0x4]
 80002f6:      	bic	r1, r1, #0x8000
 80002fa:      	str	r1, [r0, #0x4]
 80002fc:      	ldr	r1, [r0]
 80002fe:      	bfi	r1, r6, #22, #2
 8000302:      	str	r1, [r0]
 8000304:      	ldr	r1, [r0, #0x4]
 8000306:      	bic	r1, r1, #0x800
 800030a:      	str	r1, [r0, #0x4]
 800030c:      	ldr	r1, [r0]
 800030e:      	bfi	r1, r6, #28, #2
 8000312:      	str	r1, [r0]
 8000314:      	ldr	r1, [r0, #0x4]
 8000316:      	bic	r1, r1, #0x4000
 800031a:      	str	r1, [r0, #0x4]
 800031c:      	ldr	r1, [r0]
 800031e:      	bfi	r1, r6, #24, #2
 8000322:      	str	r1, [r0]
 8000324:      	ldr	r1, [r0, #0x4]
 8000326:      	bic	r1, r1, #0x1000
 800032a:      	str	r1, [r0, #0x4]
 800032c:      	ldr	r1, [r0]
 800032e:      	bfi	r1, r6, #26, #2
 8000332:      	str	r1, [r0]
 8000334:      	ldr	r1, [r0, #0x4]
 8000336:      	bic	r1, r1, #0x2000
 800033a:      	str	r1, [r0, #0x4]
 800033c:      	mov.w	r1, #0x2000000
 8000340:      	str	r1, [r0, #0x18]
 8000342:      	mov.w	r1, #0x1000000
 8000346:      	str	r1, [r0, #0x18]
 8000348:      	mov.w	r1, #0x4000000
 800034c:      	str	r1, [r0, #0x18]
 800034e:      	mov.w	r1, #0x80000000
 8000352:      	str	r1, [r0, #0x18]
 8000354:      	mov.w	r1, #0x8000000
 8000358:      	str	r1, [r0, #0x18]
 800035a:      	mov.w	r1, #0x40000000
 800035e:      	str	r1, [r0, #0x18]
 8000360:      	mov.w	r1, #0x10000000
 8000364:      	str	r1, [r0, #0x18]
 8000366:      	mov.w	r1, #0x20000000
 800036a:      	str	r1, [r0, #0x18]
 800036c:      	bl	0x80010fa <__primask_r> @ imm = #0xd8a
 8000370:      	mov	r9, r0
 8000372:      	bl	0x80010f2 <__cpsid>     @ imm = #0xd7c
 8000376:      	bl	0x80010fa <__primask_r> @ imm = #0xd80
 800037a:      	mov	r5, r0
 800037c:      	bl	0x80010f2 <__cpsid>     @ imm = #0xd72
 8000380:      	ldrb.w	r4, [r8, #0x1]
 8000384:      	and	r0, r5, #0x1
 8000388:      	cmp	r4, #0x0
 800038a:      	it	eq
 800038c:      	strbeq.w	r6, [r8, #0x1]
 8000390:      	cmp	r0, #0x0
 8000392:      	it	eq
 8000394:      	bleq	0x80010f6 <__cpsie>     @ imm = #0xd5e
 8000398:      	cmp	r4, #0x0
 800039a:      	and	r0, r9, #0x1
 800039e:      	itt	eq
 80003a0:      	moveq	r1, #0x1
 80003a2:      	strbeq.w	r1, [r8, #0x1]
 80003a6:      	cmp	r0, #0x0
 80003a8:      	it	eq
 80003aa:      	bleq	0x80010f6 <__cpsie>     @ imm = #0xd48
 80003ae:      	cmp	r4, #0x0
 80003b0:      	itt	eq
 80003b2:      	popeq.w	{r8, r9, r11}
 80003b6:      	popeq	{r4, r5, r6, r7, pc}
 80003b8:      	movw	r0, #0x1280
 80003bc:      	movt	r0, #0x800
 80003c0:      	bl	0x8000b12 <core::panicking::panic::hd499c3017018cd48> @ imm = #0x74e
 80003c4:      	trap
 80003c6:      	movw	r0, #0x1270
 80003ca:      	movt	r0, #0x800
 80003ce:      	bl	0x8000b12 <core::panicking::panic::hd499c3017018cd48> @ imm = #0x740
 80003d2:      	trap

080003d4 <core::ops::function::FnOnce::call_once::hc1f1aa328bfcb169>:
 80003d4:      	ldr	r0, [r0]
 80003d6:      	b	0x80003d6 <core::ops::function::FnOnce::call_once::hc1f1aa328bfcb169+0x2> @ imm = #-0x4

080003d8 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a>:
 80003d8:      	push	{r4, r5, r6, r7, lr}
 80003da:      	add	r7, sp, #0xc
 80003dc:      	push.w	{r8, r9, r10, r11}
 80003e0:      	sub	sp, #0x3c
 80003e2:      	ldr	r5, [r0]
 80003e4:      	movw	r0, #0x2710
 80003e8:      	mov	r11, r1
 80003ea:      	movw	r12, #0xff9c
 80003ee:      	cmp	r5, r0
 80003f0:      	movw	r0, #0x12dc
 80003f4:      	movt	r0, #0x800
 80003f8:      	blo	0x800047a <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0xa2> @ imm = #0x7e
 80003fa:      	movw	lr, #0x1759
 80003fe:      	movw	r8, #0xd8f0
 8000402:      	movw	r6, #0xe0ff
 8000406:      	add.w	r10, sp, #0x14
 800040a:      	movs	r3, #0x0
 800040c:      	movt	lr, #0xd1b7
 8000410:      	movt	r8, #0xffff
 8000414:      	movw	r9, #0x147b
 8000418:      	movt	r6, #0x5f5
 800041c:      	str.w	r11, [sp, #0x10]
 8000420:      	umull	r2, r4, r5, lr
 8000424:      	add.w	r11, r10, r3
 8000428:      	subs	r3, #0x4
 800042a:      	cmp	r5, r6
 800042c:      	lsr.w	r2, r4, #0xd
 8000430:      	mla	r4, r2, r8, r5
 8000434:      	mov	r5, r2
 8000436:      	uxth	r1, r4
 8000438:      	lsr.w	r1, r1, #0x2
 800043c:      	mul	r1, r1, r9
 8000440:      	lsr.w	r1, r1, #0x11
 8000444:      	mla	r4, r1, r12, r4
 8000448:      	ldrh.w	r1, [r0, r1, lsl #1]
 800044c:      	strh.w	r1, [r11, #0x23]
 8000450:      	uxth	r4, r4
 8000452:      	ldrh.w	r4, [r0, r4, lsl #1]
 8000456:      	strh.w	r4, [r11, #0x25]
 800045a:      	bhi	0x8000420 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x48> @ imm = #-0x3e
 800045c:      	ldr.w	r11, [sp, #0x10]
 8000460:      	adds	r3, #0x27
 8000462:      	mov	r5, r2
 8000464:      	cmp	r5, #0x63
 8000466:      	bgt	0x8000480 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0xa8> @ imm = #0x16
 8000468:      	mov	r1, r5
 800046a:      	cmp	r1, #0xa
 800046c:      	blt	0x80004a0 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0xc8> @ imm = #0x30
 800046e:      	ldrh.w	r0, [r0, r1, lsl #1]
 8000472:      	subs	r6, r3, #0x2
 8000474:      	add	r1, sp, #0x14
 8000476:      	strh	r0, [r1, r6]
 8000478:      	b	0x80004aa <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0xd2> @ imm = #0x2e
 800047a:      	movs	r3, #0x27
 800047c:      	cmp	r5, #0x63
 800047e:      	ble	0x8000468 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x90> @ imm = #-0x1a
 8000480:      	uxth	r1, r5
 8000482:      	movw	r2, #0x147b
 8000486:      	lsrs	r1, r1, #0x2
 8000488:      	subs	r3, #0x2
 800048a:      	muls	r1, r2, r1
 800048c:      	add	r6, sp, #0x14
 800048e:      	lsrs	r1, r1, #0x11
 8000490:      	mla	r2, r1, r12, r5
 8000494:      	uxth	r2, r2
 8000496:      	ldrh.w	r2, [r0, r2, lsl #1]
 800049a:      	strh	r2, [r6, r3]
 800049c:      	cmp	r1, #0xa
 800049e:      	bge	0x800046e <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x96> @ imm = #-0x34
 80004a0:      	subs	r6, r3, #0x1
 80004a2:      	add.w	r0, r1, #0x30
 80004a6:      	add	r1, sp, #0x14
 80004a8:      	strb	r0, [r1, r6]
 80004aa:      	ldr.w	r0, [r11]
 80004ae:      	add	r1, sp, #0x14
 80004b0:      	movw	r3, #0x13a4
 80004b4:      	add.w	r9, r1, r6
 80004b8:      	ldr.w	r5, [r11, #0x8]
 80004bc:      	ands	r8, r0, #0x1
 80004c0:      	lsl.w	r1, r0, #0x1d
 80004c4:      	mov.w	r10, #0x2b
 80004c8:      	movt	r3, #0x800
 80004cc:      	and.w	r2, r3, r1, asr #31
 80004d0:      	rsb.w	r4, r6, #0x27
 80004d4:      	it	eq
 80004d6:      	moveq.w	r10, #0x110000
 80004da:      	cmp	r5, #0x1
 80004dc:      	bne	0x8000512 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x13a> @ imm = #0x32
 80004de:      	mov	r5, r9
 80004e0:      	ldr.w	r9, [r11, #0xc]
 80004e4:      	add.w	r1, r4, r8
 80004e8:      	strd	r4, r2, [sp, #12]
 80004ec:      	cmp	r9, r1
 80004ee:      	bls	0x8000520 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x148> @ imm = #0x2e
 80004f0:      	lsls	r0, r0, #0x1c
 80004f2:      	str	r5, [sp, #0x8]
 80004f4:      	bmi	0x8000552 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x17a> @ imm = #0x5a
 80004f6:      	ldrb.w	r2, [r11, #0x20]
 80004fa:      	sub.w	r0, r9, r1
 80004fe:      	cmp	r2, #0x3
 8000500:      	it	eq
 8000502:      	moveq	r2, #0x1
 8000504:      	lsls	r1, r2, #0x1e
 8000506:      	beq	0x80005a6 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1ce> @ imm = #0x9c
 8000508:      	cmp	r2, #0x1
 800050a:      	bne	0x80005ac <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1d4> @ imm = #0x9e
 800050c:      	movs	r5, #0x0
 800050e:      	mov	r1, r0
 8000510:      	b	0x80005b2 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1da> @ imm = #0x9e
 8000512:      	mov	r0, r11
 8000514:      	mov	r1, r10
 8000516:      	bl	0x8000690 <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37> @ imm = #0x176
 800051a:      	cbz	r0, 0x800053a <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x162> @ imm = #0x1c
 800051c:      	movs	r4, #0x1
 800051e:      	b	0x8000574 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x19c> @ imm = #0x52
 8000520:      	ldr	r2, [sp, #0x10]
 8000522:      	mov	r0, r11
 8000524:      	mov	r1, r10
 8000526:      	bl	0x8000690 <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37> @ imm = #0x166
 800052a:      	cmp	r0, #0x0
 800052c:      	bne	0x800061e <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x246> @ imm = #0xee
 800052e:      	ldrd	r0, r1, [r11, #24]
 8000532:      	ldr	r3, [r1, #0xc]
 8000534:      	mov	r1, r5
 8000536:      	ldr	r2, [sp, #0xc]
 8000538:      	b	0x8000544 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x16c> @ imm = #0x8
 800053a:      	ldrd	r0, r1, [r11, #24]
 800053e:      	mov	r2, r4
 8000540:      	ldr	r3, [r1, #0xc]
 8000542:      	mov	r1, r9
 8000544:      	blx	r3
 8000546:      	mov	r4, r0
 8000548:      	mov	r0, r4
 800054a:      	add	sp, #0x3c
 800054c:      	pop.w	{r8, r9, r10, r11}
 8000550:      	pop	{r4, r5, r6, r7, pc}
 8000552:      	ldr	r2, [sp, #0x10]
 8000554:      	movs	r0, #0x30
 8000556:      	ldrb.w	r1, [r11, #0x20]
 800055a:      	movs	r4, #0x1
 800055c:      	ldr.w	r5, [r11, #0x4]
 8000560:      	str	r1, [sp, #0x4]
 8000562:      	mov	r1, r10
 8000564:      	str.w	r0, [r11, #0x4]
 8000568:      	mov	r0, r11
 800056a:      	strb.w	r4, [r11, #0x20]
 800056e:      	bl	0x8000690 <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37> @ imm = #0x11e
 8000572:      	cbz	r0, 0x800057e <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1a6> @ imm = #0x8
 8000574:      	mov	r0, r4
 8000576:      	add	sp, #0x3c
 8000578:      	pop.w	{r8, r9, r10, r11}
 800057c:      	pop	{r4, r5, r6, r7, pc}
 800057e:      	add.w	r0, r6, r9
 8000582:      	mov	r10, r5
 8000584:      	sub.w	r0, r0, r8
 8000588:      	ldrd	r4, r5, [r11, #24]
 800058c:      	ldr.w	r8, [sp, #0xc]
 8000590:      	sub.w	r6, r0, #0x26
 8000594:      	subs	r6, #0x1
 8000596:      	beq	0x8000612 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x23a> @ imm = #0x78
 8000598:      	ldr	r2, [r5, #0x10]
 800059a:      	mov	r0, r4
 800059c:      	movs	r1, #0x30
 800059e:      	blx	r2
 80005a0:      	cmp	r0, #0x0
 80005a2:      	beq	0x8000594 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1bc> @ imm = #-0x12
 80005a4:      	b	0x800061e <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x246> @ imm = #0x76
 80005a6:      	movs	r1, #0x0
 80005a8:      	mov	r5, r0
 80005aa:      	b	0x80005b2 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1da> @ imm = #0x4
 80005ac:      	lsrs	r1, r0, #0x1
 80005ae:      	adds	r0, #0x1
 80005b0:      	lsrs	r5, r0, #0x1
 80005b2:      	ldr.w	r6, [r11, #0x4]
 80005b6:      	adds	r4, r1, #0x1
 80005b8:      	ldrd	r9, r8, [r11, #24]
 80005bc:      	subs	r4, #0x1
 80005be:      	beq	0x80005d0 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1f8> @ imm = #0xe
 80005c0:      	ldr.w	r2, [r8, #0x10]
 80005c4:      	mov	r0, r9
 80005c6:      	mov	r1, r6
 80005c8:      	blx	r2
 80005ca:      	cmp	r0, #0x0
 80005cc:      	beq	0x80005bc <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x1e4> @ imm = #-0x14
 80005ce:      	b	0x800061e <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x246> @ imm = #0x4c
 80005d0:      	subs.w	r4, r6, #0x110000
 80005d4:      	it	ne
 80005d6:      	movne	r4, r5
 80005d8:      	cmp.w	r6, #0x110000
 80005dc:      	beq	0x800061e <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x246> @ imm = #0x3e
 80005de:      	ldr	r2, [sp, #0x10]
 80005e0:      	mov	r0, r11
 80005e2:      	mov	r1, r10
 80005e4:      	bl	0x8000690 <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37> @ imm = #0xa8
 80005e8:      	cbnz	r0, 0x800061e <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x246> @ imm = #0x32
 80005ea:      	ldr.w	r3, [r8, #0xc]
 80005ee:      	mov	r0, r9
 80005f0:      	ldrd	r1, r2, [sp, #8]
 80005f4:      	blx	r3
 80005f6:      	cbnz	r0, 0x800061e <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x246> @ imm = #0x24
 80005f8:      	movs	r5, #0x0
 80005fa:      	cmp	r4, r5
 80005fc:      	beq	0x8000640 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x268> @ imm = #0x40
 80005fe:      	ldr.w	r2, [r8, #0x10]
 8000602:      	mov	r0, r9
 8000604:      	mov	r1, r6
 8000606:      	blx	r2
 8000608:      	adds	r5, #0x1
 800060a:      	cmp	r0, #0x0
 800060c:      	beq	0x80005fa <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x222> @ imm = #-0x16
 800060e:      	subs	r0, r5, #0x1
 8000610:      	b	0x8000642 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x26a> @ imm = #0x2e
 8000612:      	ldr	r3, [r5, #0xc]
 8000614:      	mov	r0, r4
 8000616:      	ldr	r1, [sp, #0x8]
 8000618:      	mov	r2, r8
 800061a:      	blx	r3
 800061c:      	cbz	r0, 0x800062a <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hbbb0f177c8612b9a+0x252> @ imm = #0xa
 800061e:      	movs	r4, #0x1
 8000620:      	mov	r0, r4
 8000622:      	add	sp, #0x3c
 8000624:      	pop.w	{r8, r9, r10, r11}
 8000628:      	pop	{r4, r5, r6, r7, pc}
 800062a:      	ldr	r0, [sp, #0x4]
 800062c:      	movs	r4, #0x0
 800062e:      	strb.w	r0, [r11, #0x20]
 8000632:      	str.w	r10, [r11, #0x4]
 8000636:      	mov	r0, r4
 8000638:      	add	sp, #0x3c
 800063a:      	pop.w	{r8, r9, r10, r11}
 800063e:      	pop	{r4, r5, r6, r7, pc}
 8000640:      	mov	r0, r4
 8000642:      	mov	r1, r4
 8000644:      	movs	r4, #0x0
 8000646:      	cmp	r0, r1
 8000648:      	it	lo
 800064a:      	movlo	r4, #0x1
 800064c:      	mov	r0, r4
 800064e:      	add	sp, #0x3c
 8000650:      	pop.w	{r8, r9, r10, r11}
 8000654:      	pop	{r4, r5, r6, r7, pc}

08000656 <core::panicking::panic_fmt::h46301c7d62ff248a>:
 8000656:      	push	{r7, lr}
 8000658:      	mov	r7, sp
 800065a:      	sub	sp, #0x10
 800065c:      	strd	r0, r1, [sp, #8]
 8000660:      	movw	r0, #0x12ac
 8000664:      	movt	r0, #0x800
 8000668:      	str	r0, [sp, #0x4]
 800066a:      	movw	r0, #0x13a4
 800066e:      	movt	r0, #0x800
 8000672:      	str	r0, [sp]
 8000674:      	mov	r0, sp
 8000676:      	bl	0x8000d28 <rust_begin_unwind> @ imm = #0x6ae
 800067a:      	trap

0800067c <core::ptr::drop_in_place<&core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>>::hda90baf15865d9c4>:
 800067c:      	bx	lr

0800067e <<T as core::any::Any>::type_id::h73579ccd4cb5b209>:
 800067e:      	movw	r0, #0x208f
 8000682:      	movw	r1, #0x70d7
 8000686:      	movt	r0, #0x9257
 800068a:      	movt	r1, #0xefa8
 800068e:      	bx	lr

08000690 <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37>:
 8000690:      	push	{r4, r5, r7, lr}
 8000692:      	add	r7, sp, #0x8
 8000694:      	mov	r4, r2
 8000696:      	mov	r5, r0
 8000698:      	cmp.w	r1, #0x110000
 800069c:      	beq	0x80006ac <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37+0x1c> @ imm = #0xc
 800069e:      	ldrd	r0, r2, [r5, #24]
 80006a2:      	ldr	r2, [r2, #0x10]
 80006a4:      	blx	r2
 80006a6:      	cbz	r0, 0x80006ac <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37+0x1c> @ imm = #0x2
 80006a8:      	movs	r0, #0x1
 80006aa:      	pop	{r4, r5, r7, pc}
 80006ac:      	cbz	r4, 0x80006be <core::fmt::Formatter::pad_integral::write_prefix::hde7a5d3a01013f37+0x2e> @ imm = #0xe
 80006ae:      	ldrd	r0, r1, [r5, #24]
 80006b2:      	movs	r2, #0x0
 80006b4:      	ldr	r3, [r1, #0xc]
 80006b6:      	mov	r1, r4
 80006b8:      	pop.w	{r4, r5, r7, lr}
 80006bc:      	bx	r3
 80006be:      	movs	r0, #0x0
 80006c0:      	pop	{r4, r5, r7, pc}

080006c2 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b>:
 80006c2:      	push	{r4, r5, r6, r7, lr}
 80006c4:      	add	r7, sp, #0xc
 80006c6:      	push.w	{r8, r9, r10, r11}
 80006ca:      	sub	sp, #0x14
 80006cc:      	mov	r8, r1
 80006ce:      	ldr.w	lr, [r0, #0x8]
 80006d2:      	ldr	r1, [r0, #0x10]
 80006d4:      	mov	r9, r2
 80006d6:      	cmp.w	lr, #0x1
 80006da:      	bne	0x80006fe <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x3c> @ imm = #0x20
 80006dc:      	cmp	r1, #0x1
 80006de:      	beq	0x8000704 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x42> @ imm = #0x22
 80006e0:      	ldr.w	r10, [r0, #0xc]
 80006e4:      	cmp.w	r9, #0x0
 80006e8:      	beq.w	0x8000ae2 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x420> @ imm = #0x3f6
 80006ec:      	sub.w	r1, r9, #0x1
 80006f0:      	and	lr, r9, #0x3
 80006f4:      	cmp	r1, #0x3
 80006f6:      	bhs	0x80007da <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x118> @ imm = #0xe0
 80006f8:      	movs	r2, #0x0
 80006fa:      	mov	r6, r8
 80006fc:      	b	0x80009dc <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x31a> @ imm = #0x2dc
 80006fe:      	cmp	r1, #0x1
 8000700:      	bne.w	0x8000ae8 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x426> @ imm = #0x3e4
 8000704:      	ldr	r6, [r0, #0x14]
 8000706:      	add.w	r12, r8, r9
 800070a:      	movs	r2, #0x0
 800070c:      	mov	r4, r8
 800070e:      	cmp	r6, #0x0
 8000710:      	beq	0x80007aa <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xe8> @ imm = #0x96
 8000712:      	str	r0, [sp, #0x10]
 8000714:      	b	0x800074a <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x88> @ imm = #0x32
 8000716:      	ldrb	r5, [r4], #1
 800071a:      	and	r8, r5, #0x3f
 800071e:      	mov.w	r5, #0x1c0000
 8000722:      	and.w	r1, r5, r1, lsl #18
 8000726:      	orr.w	r1, r1, r10, lsl #12
 800072a:      	orr.w	r1, r1, r11, lsl #6
 800072e:      	add	r1, r8
 8000730:      	mov	r8, r9
 8000732:      	mov	r9, lr
 8000734:      	mov	lr, r0
 8000736:      	ldr	r0, [sp, #0x10]
 8000738:      	cmp.w	r1, #0x110000
 800073c:      	beq.w	0x8000aca <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x408> @ imm = #0x38a
 8000740:      	subs	r1, r2, r3
 8000742:      	subs	r6, #0x1
 8000744:      	add.w	r2, r1, r4
 8000748:      	beq	0x80007aa <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xe8> @ imm = #0x5e
 800074a:      	cmp	r4, r12
 800074c:      	beq.w	0x8000aca <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x408> @ imm = #0x37a
 8000750:      	mov	r3, r4
 8000752:      	ldrsb	r1, [r4], #1
 8000756:      	cmp.w	r1, #0xffffffff
 800075a:      	bgt	0x8000740 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x7e> @ imm = #-0x1e
 800075c:      	cmp	r4, r12
 800075e:      	beq	0x8000770 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xae> @ imm = #0xe
 8000760:      	ldrb	r5, [r3, #0x1]
 8000762:      	adds	r4, r3, #0x2
 8000764:      	and	r10, r5, #0x3f
 8000768:      	uxtb	r1, r1
 800076a:      	cmp	r1, #0xe0
 800076c:      	blo	0x8000740 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x7e> @ imm = #-0x30
 800076e:      	b	0x800077c <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xba> @ imm = #0xa
 8000770:      	mov.w	r10, #0x0
 8000774:      	mov	r4, r12
 8000776:      	uxtb	r1, r1
 8000778:      	cmp	r1, #0xe0
 800077a:      	blo	0x8000740 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x7e> @ imm = #-0x3e
 800077c:      	cmp	r4, r12
 800077e:      	beq	0x800078e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xcc> @ imm = #0xc
 8000780:      	ldrb	r5, [r4], #1
 8000784:      	and	r11, r5, #0x3f
 8000788:      	cmp	r1, #0xf0
 800078a:      	blo	0x8000740 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x7e> @ imm = #-0x4e
 800078c:      	b	0x8000798 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xd6> @ imm = #0x8
 800078e:      	mov.w	r11, #0x0
 8000792:      	mov	r4, r12
 8000794:      	cmp	r1, #0xf0
 8000796:      	blo	0x8000740 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x7e> @ imm = #-0x5a
 8000798:      	mov	r0, lr
 800079a:      	mov	lr, r9
 800079c:      	mov	r9, r8
 800079e:      	cmp	r4, r12
 80007a0:      	bne	0x8000716 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x54> @ imm = #-0x8e
 80007a2:      	mov.w	r8, #0x0
 80007a6:      	mov	r4, r12
 80007a8:      	b	0x800071e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x5c> @ imm = #-0x8e
 80007aa:      	cmp	r4, r12
 80007ac:      	beq.w	0x8000aca <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x408> @ imm = #0x31a
 80007b0:      	mov	r1, r4
 80007b2:      	ldrsb	r3, [r1], #1
 80007b6:      	cmp.w	r3, #0xffffffff
 80007ba:      	ble	0x80007fc <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x13a> @ imm = #0x3e
 80007bc:      	cmp	r2, #0x0
 80007be:      	beq.w	0x800093a <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x278> @ imm = #0x178
 80007c2:      	cmp	r2, r9
 80007c4:      	bhs.w	0x8000934 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x272> @ imm = #0x16c
 80007c8:      	ldrsb.w	r1, [r8, r2]
 80007cc:      	cmn.w	r1, #0x40
 80007d0:      	bge.w	0x800093a <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x278> @ imm = #0x166
 80007d4:      	movs	r1, #0x0
 80007d6:      	movs	r2, #0x0
 80007d8:      	b	0x800093c <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x27a> @ imm = #0x160
 80007da:      	sub.w	r1, r9, #0x4
 80007de:      	bic	r2, r1, #0x3
 80007e2:      	movs	r1, #0x1
 80007e4:      	cmp	r2, #0xc
 80007e6:      	add.w	r1, r1, r2, lsr #2
 80007ea:      	and	r3, r1, #0x3
 80007ee:      	bhs	0x8000816 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x154> @ imm = #0x24
 80007f0:      	movs	r2, #0x0
 80007f2:      	mov	r6, r8
 80007f4:      	cmp	r3, #0x0
 80007f6:      	bne.w	0x80008fc <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x23a> @ imm = #0x102
 80007fa:      	b	0x80009dc <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x31a> @ imm = #0x1de
 80007fc:      	uxtb	r3, r3
 80007fe:      	cmp	r1, r12
 8000800:      	beq.w	0x800098a <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x2c8> @ imm = #0x186
 8000804:      	ldrb	r5, [r4, #0x1]
 8000806:      	adds	r1, r4, #0x2
 8000808:      	and	r4, r5, #0x3f
 800080c:      	lsls	r6, r4, #0x6
 800080e:      	cmp	r3, #0xe0
 8000810:      	bhs.w	0x8000994 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x2d2> @ imm = #0x180
 8000814:      	b	0x80007bc <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xfa> @ imm = #-0x5c
 8000816:      	bic	r1, r1, #0x3
 800081a:      	strd	r3, lr, [sp, #4]
 800081e:      	rsb.w	lr, r1, #0x0
 8000822:      	movs	r2, #0x0
 8000824:      	mov	r6, r8
 8000826:      	str.w	r8, [sp, #0xc]
 800082a:      	ldrsb.w	r4, [r6, #0xc]
 800082e:      	ldrsb.w	r1, [r6, #0xd]
 8000832:      	ldrsb.w	r8, [r6, #0xe]
 8000836:      	ldrsb.w	r11, [r6, #0xf]
 800083a:      	ldrsb	r3, [r6], #16
 800083e:      	ldrsb	r12, [r6, #-15]
 8000842:      	cmn.w	r3, #0x41
 8000846:      	it	gt
 8000848:      	addgt	r2, #0x1
 800084a:      	ldrsb	r3, [r6, #-14]
 800084e:      	cmn.w	r12, #0x41
 8000852:      	it	gt
 8000854:      	addgt	r2, #0x1
 8000856:      	ldrsb	r5, [r6, #-13]
 800085a:      	cmn.w	r3, #0x41
 800085e:      	it	gt
 8000860:      	addgt	r2, #0x1
 8000862:      	ldrsb	r3, [r6, #-12]
 8000866:      	cmn.w	r5, #0x41
 800086a:      	it	gt
 800086c:      	addgt	r2, #0x1
 800086e:      	ldrsb	r5, [r6, #-11]
 8000872:      	cmn.w	r3, #0x41
 8000876:      	it	gt
 8000878:      	addgt	r2, #0x1
 800087a:      	ldrsb	r3, [r6, #-10]
 800087e:      	cmn.w	r5, #0x41
 8000882:      	it	gt
 8000884:      	addgt	r2, #0x1
 8000886:      	ldrsb	r5, [r6, #-9]
 800088a:      	cmn.w	r3, #0x41
 800088e:      	it	gt
 8000890:      	addgt	r2, #0x1
 8000892:      	ldrsb	r3, [r6, #-8]
 8000896:      	cmn.w	r5, #0x41
 800089a:      	it	gt
 800089c:      	addgt	r2, #0x1
 800089e:      	ldrsb	r5, [r6, #-7]
 80008a2:      	cmn.w	r3, #0x41
 80008a6:      	it	gt
 80008a8:      	addgt	r2, #0x1
 80008aa:      	ldrsb	r3, [r6, #-6]
 80008ae:      	cmn.w	r5, #0x41
 80008b2:      	it	gt
 80008b4:      	addgt	r2, #0x1
 80008b6:      	ldrsb	r5, [r6, #-5]
 80008ba:      	cmn.w	r3, #0x41
 80008be:      	it	gt
 80008c0:      	addgt	r2, #0x1
 80008c2:      	cmn.w	r5, #0x41
 80008c6:      	it	gt
 80008c8:      	addgt	r2, #0x1
 80008ca:      	cmn.w	r4, #0x41
 80008ce:      	it	gt
 80008d0:      	addgt	r2, #0x1
 80008d2:      	cmn.w	r1, #0x41
 80008d6:      	it	gt
 80008d8:      	addgt	r2, #0x1
 80008da:      	cmn.w	r8, #0x41
 80008de:      	it	gt
 80008e0:      	addgt	r2, #0x1
 80008e2:      	cmn.w	r11, #0x41
 80008e6:      	it	gt
 80008e8:      	addgt	r2, #0x1
 80008ea:      	adds.w	lr, lr, #0x4
 80008ee:      	bne	0x800082a <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x168> @ imm = #-0xc8
 80008f0:      	ldr.w	r8, [sp, #0xc]
 80008f4:      	ldrd	r3, lr, [sp, #4]
 80008f8:      	cmp	r3, #0x0
 80008fa:      	beq	0x80009dc <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x31a> @ imm = #0xde
 80008fc:      	ldrsb.w	r5, [r6]
 8000900:      	ldrsb.w	r4, [r6, #0x1]
 8000904:      	ldrsb.w	r1, [r6, #0x2]
 8000908:      	cmn.w	r5, #0x41
 800090c:      	ldrsb.w	r12, [r6, #0x3]
 8000910:      	it	gt
 8000912:      	addgt	r2, #0x1
 8000914:      	cmn.w	r4, #0x41
 8000918:      	it	gt
 800091a:      	addgt	r2, #0x1
 800091c:      	cmn.w	r1, #0x41
 8000920:      	it	gt
 8000922:      	addgt	r2, #0x1
 8000924:      	cmn.w	r12, #0x41
 8000928:      	it	gt
 800092a:      	addgt	r2, #0x1
 800092c:      	cmp	r3, #0x1
 800092e:      	bne	0x8000952 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x290> @ imm = #0x20
 8000930:      	adds	r6, #0x4
 8000932:      	b	0x80009dc <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x31a> @ imm = #0xa6
 8000934:      	cmp	r2, r9
 8000936:      	bne.w	0x80007d4 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x112> @ imm = #-0x166
 800093a:      	mov	r1, r8
 800093c:      	cmp	r1, #0x0
 800093e:      	ite	eq
 8000940:      	moveq	r2, r9
 8000942:      	movne	r8, r1
 8000944:      	cmp.w	lr, #0x1
 8000948:      	beq.w	0x8000ad4 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x412> @ imm = #0x188
 800094c:      	ldrd	r1, r0, [r0, #24]
 8000950:      	b	0x8000aee <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x42c> @ imm = #0x19a
 8000952:      	ldrsb.w	r5, [r6, #0x4]
 8000956:      	ldrsb.w	r4, [r6, #0x5]
 800095a:      	ldrsb.w	r1, [r6, #0x6]
 800095e:      	cmn.w	r5, #0x41
 8000962:      	ldrsb.w	r12, [r6, #0x7]
 8000966:      	it	gt
 8000968:      	addgt	r2, #0x1
 800096a:      	cmn.w	r4, #0x41
 800096e:      	it	gt
 8000970:      	addgt	r2, #0x1
 8000972:      	cmn.w	r1, #0x41
 8000976:      	it	gt
 8000978:      	addgt	r2, #0x1
 800097a:      	cmn.w	r12, #0x41
 800097e:      	it	gt
 8000980:      	addgt	r2, #0x1
 8000982:      	cmp	r3, #0x2
 8000984:      	bne	0x80009aa <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x2e8> @ imm = #0x22
 8000986:      	adds	r6, #0x8
 8000988:      	b	0x80009dc <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x31a> @ imm = #0x50
 800098a:      	movs	r6, #0x0
 800098c:      	mov	r1, r12
 800098e:      	cmp	r3, #0xe0
 8000990:      	blo.w	0x80007bc <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xfa> @ imm = #-0x1d8
 8000994:      	cmp	r1, r12
 8000996:      	beq.w	0x8000a9c <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x3da> @ imm = #0x102
 800099a:      	ldrb	r4, [r1], #1
 800099e:      	and	r4, r4, #0x3f
 80009a2:      	cmp	r3, #0xf0
 80009a4:      	blo.w	0x80007bc <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xfa> @ imm = #-0x1ec
 80009a8:      	b	0x8000aa6 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x3e4> @ imm = #0xfa
 80009aa:      	ldrsb.w	r5, [r6, #0x8]
 80009ae:      	ldrsb.w	r4, [r6, #0x9]
 80009b2:      	ldrsb.w	r1, [r6, #0xa]
 80009b6:      	cmn.w	r5, #0x41
 80009ba:      	ldrsb.w	r12, [r6, #0xb]
 80009be:      	it	gt
 80009c0:      	addgt	r2, #0x1
 80009c2:      	cmn.w	r4, #0x41
 80009c6:      	it	gt
 80009c8:      	addgt	r2, #0x1
 80009ca:      	cmn.w	r1, #0x41
 80009ce:      	it	gt
 80009d0:      	addgt	r2, #0x1
 80009d2:      	cmn.w	r12, #0x41
 80009d6:      	it	gt
 80009d8:      	addgt	r2, #0x1
 80009da:      	adds	r6, #0xc
 80009dc:      	cmp.w	lr, #0x0
 80009e0:      	beq	0x8000a12 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x350> @ imm = #0x2e
 80009e2:      	ldrsb.w	r1, [r6]
 80009e6:      	cmn.w	r1, #0x41
 80009ea:      	it	gt
 80009ec:      	addgt	r2, #0x1
 80009ee:      	cmp.w	lr, #0x1
 80009f2:      	beq	0x8000a12 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x350> @ imm = #0x1c
 80009f4:      	ldrsb.w	r1, [r6, #0x1]
 80009f8:      	cmn.w	r1, #0x41
 80009fc:      	it	gt
 80009fe:      	addgt	r2, #0x1
 8000a00:      	cmp.w	lr, #0x2
 8000a04:      	beq	0x8000a12 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x350> @ imm = #0xa
 8000a06:      	ldrsb.w	r1, [r6, #0x2]
 8000a0a:      	cmn.w	r1, #0x41
 8000a0e:      	it	gt
 8000a10:      	addgt	r2, #0x1
 8000a12:      	cmp	r10, r2
 8000a14:      	bls	0x8000ae8 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x426> @ imm = #0xd0
 8000a16:      	ldrb.w	r3, [r0, #0x20]
 8000a1a:      	sub.w	r2, r10, r2
 8000a1e:      	subs	r1, r3, #0x3
 8000a20:      	it	ne
 8000a22:      	movne	r1, r3
 8000a24:      	lsls	r3, r1, #0x1e
 8000a26:      	str.w	r8, [sp, #0xc]
 8000a2a:      	beq	0x8000a38 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x376> @ imm = #0xa
 8000a2c:      	cmp	r1, #0x1
 8000a2e:      	bne	0x8000a3e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x37c> @ imm = #0xc
 8000a30:      	mov.w	r11, #0x0
 8000a34:      	mov	r1, r2
 8000a36:      	b	0x8000a46 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x384> @ imm = #0xc
 8000a38:      	movs	r1, #0x0
 8000a3a:      	mov	r11, r2
 8000a3c:      	b	0x8000a46 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x384> @ imm = #0x6
 8000a3e:      	lsrs	r1, r2, #0x1
 8000a40:      	adds	r2, #0x1
 8000a42:      	lsr.w	r11, r2, #0x1
 8000a46:      	ldr	r6, [r0, #0x4]
 8000a48:      	adds	r4, r1, #0x1
 8000a4a:      	ldrd	r8, r5, [r0, #24]
 8000a4e:      	subs	r4, #0x1
 8000a50:      	beq	0x8000a60 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x39e> @ imm = #0xc
 8000a52:      	ldr	r2, [r5, #0x10]
 8000a54:      	mov	r0, r8
 8000a56:      	mov	r1, r6
 8000a58:      	blx	r2
 8000a5a:      	cmp	r0, #0x0
 8000a5c:      	beq	0x8000a4e <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x38c> @ imm = #-0x12
 8000a5e:      	b	0x8000a7a <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x3b8> @ imm = #0x18
 8000a60:      	subs.w	r10, r6, #0x110000
 8000a64:      	it	ne
 8000a66:      	movne	r10, r11
 8000a68:      	cmp.w	r6, #0x110000
 8000a6c:      	beq	0x8000a7a <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x3b8> @ imm = #0xa
 8000a6e:      	ldr	r3, [r5, #0xc]
 8000a70:      	mov	r0, r8
 8000a72:      	ldr	r1, [sp, #0xc]
 8000a74:      	mov	r2, r9
 8000a76:      	blx	r3
 8000a78:      	cbz	r0, 0x8000a84 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x3c2> @ imm = #0x8
 8000a7a:      	movs	r0, #0x1
 8000a7c:      	add	sp, #0x14
 8000a7e:      	pop.w	{r8, r9, r10, r11}
 8000a82:      	pop	{r4, r5, r6, r7, pc}
 8000a84:      	movs	r4, #0x0
 8000a86:      	cmp	r10, r4
 8000a88:      	beq	0x8000b00 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x43e> @ imm = #0x74
 8000a8a:      	ldr	r2, [r5, #0x10]
 8000a8c:      	mov	r0, r8
 8000a8e:      	mov	r1, r6
 8000a90:      	blx	r2
 8000a92:      	adds	r4, #0x1
 8000a94:      	cmp	r0, #0x0
 8000a96:      	beq	0x8000a86 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x3c4> @ imm = #-0x14
 8000a98:      	subs	r1, r4, #0x1
 8000a9a:      	b	0x8000b02 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x440> @ imm = #0x64
 8000a9c:      	movs	r4, #0x0
 8000a9e:      	mov	r1, r12
 8000aa0:      	cmp	r3, #0xf0
 8000aa2:      	blo.w	0x80007bc <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xfa> @ imm = #-0x2ea
 8000aa6:      	orrs	r6, r4
 8000aa8:      	mov.w	r5, #0x1c0000
 8000aac:      	and.w	r3, r5, r3, lsl #18
 8000ab0:      	cmp	r1, r12
 8000ab2:      	itte	ne
 8000ab4:      	ldrbne	r1, [r1]
 8000ab6:      	andne	r1, r1, #0x3f
 8000aba:      	moveq	r1, #0x0
 8000abc:      	orr.w	r3, r3, r6, lsl #6
 8000ac0:      	add	r1, r3
 8000ac2:      	cmp.w	r1, #0x110000
 8000ac6:      	bne.w	0x80007bc <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0xfa> @ imm = #-0x30e
 8000aca:      	mov	r2, r9
 8000acc:      	cmp.w	lr, #0x1
 8000ad0:      	bne.w	0x800094c <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x28a> @ imm = #-0x188
 8000ad4:      	mov	r9, r2
 8000ad6:      	ldr.w	r10, [r0, #0xc]
 8000ada:      	cmp.w	r9, #0x0
 8000ade:      	bne.w	0x80006ec <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x2a> @ imm = #-0x3f6
 8000ae2:      	movs	r2, #0x0
 8000ae4:      	cmp	r10, r2
 8000ae6:      	bhi	0x8000a16 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b+0x354> @ imm = #-0xd4
 8000ae8:      	ldr	r1, [r0, #0x18]
 8000aea:      	mov	r2, r9
 8000aec:      	ldr	r0, [r0, #0x1c]
 8000aee:      	ldr	r3, [r0, #0xc]
 8000af0:      	mov	r0, r1
 8000af2:      	mov	r1, r8
 8000af4:      	add	sp, #0x14
 8000af6:      	pop.w	{r8, r9, r10, r11}
 8000afa:      	pop.w	{r4, r5, r6, r7, lr}
 8000afe:      	bx	r3
 8000b00:      	mov	r1, r10
 8000b02:      	movs	r0, #0x0
 8000b04:      	cmp	r1, r10
 8000b06:      	it	lo
 8000b08:      	movlo	r0, #0x1
 8000b0a:      	add	sp, #0x14
 8000b0c:      	pop.w	{r8, r9, r10, r11}
 8000b10:      	pop	{r4, r5, r6, r7, pc}

08000b12 <core::panicking::panic::hd499c3017018cd48>:
 8000b12:      	push	{r7, lr}
 8000b14:      	mov	r7, sp
 8000b16:      	sub	sp, #0x20
 8000b18:      	mov	r1, r0
 8000b1a:      	movs	r0, #0x0
 8000b1c:      	str	r0, [sp, #0x14]
 8000b1e:      	movw	r2, #0x13a4
 8000b22:      	strd	r0, r0, [sp, #8]
 8000b26:      	movs	r0, #0x1
 8000b28:      	str	r0, [sp, #0x4]
 8000b2a:      	add	r0, sp, #0x18
 8000b2c:      	str	r0, [sp]
 8000b2e:      	movs	r0, #0x2b
 8000b30:      	str	r0, [sp, #0x1c]
 8000b32:      	movw	r0, #0x1220
 8000b36:      	movt	r0, #0x800
 8000b3a:      	movt	r2, #0x800
 8000b3e:      	str	r0, [sp, #0x18]
 8000b40:      	mov	r0, sp
 8000b42:      	str	r2, [sp, #0x10]
 8000b44:      	bl	0x8000656 <core::panicking::panic_fmt::h46301c7d62ff248a> @ imm = #-0x4f2
 8000b48:      	trap

08000b4a <<&T as core::fmt::Display>::fmt::h63ea021ca5429c64>:
 8000b4a:      	mov	r3, r1
 8000b4c:      	ldrd	r1, r2, [r0]
 8000b50:      	mov	r0, r3
 8000b52:      	b.w	0x80006c2 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b> @ imm = #-0x494

08000b56 <core::fmt::write::h57ce06a461283b3c>:
 8000b56:      	push	{r4, r5, r6, r7, lr}
 8000b58:      	add	r7, sp, #0xc
 8000b5a:      	push.w	{r8, r9, r10, r11}
 8000b5e:      	sub	sp, #0x2c
 8000b60:      	mov	r11, r2
 8000b62:      	movs	r2, #0x3
 8000b64:      	ldr.w	r10, [r11, #0x8]
 8000b68:      	strb.w	r2, [sp, #0x28]
 8000b6c:      	movs	r2, #0x20
 8000b6e:      	str	r2, [sp, #0xc]
 8000b70:      	movs	r2, #0x0
 8000b72:      	cmp.w	r10, #0x0
 8000b76:      	str	r2, [sp, #0x8]
 8000b78:      	str	r1, [sp, #0x24]
 8000b7a:      	str	r0, [sp, #0x20]
 8000b7c:      	str	r2, [sp, #0x18]
 8000b7e:      	str	r2, [sp, #0x10]
 8000b80:      	beq	0x8000c5c <core::fmt::write::h57ce06a461283b3c+0x106> @ imm = #0xd8
 8000b82:      	ldr.w	r0, [r11, #0xc]
 8000b86:      	cmp	r0, #0x0
 8000b88:      	beq.w	0x8000caa <core::fmt::write::h57ce06a461283b3c+0x154> @ imm = #0x11e
 8000b8c:      	mvn	r1, #0x1f
 8000b90:      	ldr.w	r9, [r11]
 8000b94:      	add.w	r1, r1, r0, lsl #5
 8000b98:      	lsls	r0, r0, #0x5
 8000b9a:      	movs	r4, #0x0
 8000b9c:      	mov.w	r8, #0x0
 8000ba0:      	movs	r2, #0x1
 8000ba2:      	add.w	r1, r2, r1, lsr #5
 8000ba6:      	str	r1, [sp]
 8000ba8:      	str	r0, [sp, #0x4]
 8000baa:      	add.w	r0, r9, r8
 8000bae:      	ldr	r2, [r0, #0x4]
 8000bb0:      	cbz	r2, 0x8000bc4 <core::fmt::write::h57ce06a461283b3c+0x6e> @ imm = #0x10
 8000bb2:      	ldrd	r0, r3, [sp, #32]
 8000bb6:      	ldr.w	r1, [r9, r8]
 8000bba:      	ldr	r3, [r3, #0xc]
 8000bbc:      	blx	r3
 8000bbe:      	cmp	r0, #0x0
 8000bc0:      	bne.w	0x8000ccc <core::fmt::write::h57ce06a461283b3c+0x176> @ imm = #0x108
 8000bc4:      	add.w	r0, r10, r8, lsl #2
 8000bc8:      	ldr.w	r1, [r11, #0x10]
 8000bcc:      	ldrd	r5, r6, [r0, #4]
 8000bd0:      	ldrd	r2, r3, [r0, #20]
 8000bd4:      	strd	r6, r5, [sp, #8]
 8000bd8:      	ldrb	r6, [r0, #0x1c]
 8000bda:      	strb.w	r6, [sp, #0x28]
 8000bde:      	cbz	r2, 0x8000c00 <core::fmt::write::h57ce06a461283b3c+0xaa> @ imm = #0x1e
 8000be0:      	cmp	r2, #0x1
 8000be2:      	bne	0x8000bf6 <core::fmt::write::h57ce06a461283b3c+0xa0> @ imm = #0x10
 8000be4:      	add.w	r2, r1, r3, lsl #3
 8000be8:      	movw	r6, #0x3d5
 8000bec:      	movt	r6, #0x800
 8000bf0:      	ldr	r2, [r2, #0x4]
 8000bf2:      	cmp	r2, r6
 8000bf4:      	beq	0x8000bfa <core::fmt::write::h57ce06a461283b3c+0xa4> @ imm = #0x2
 8000bf6:      	movs	r5, #0x0
 8000bf8:      	b	0x8000c02 <core::fmt::write::h57ce06a461283b3c+0xac> @ imm = #0x6
 8000bfa:      	ldr.w	r2, [r1, r3, lsl #3]
 8000bfe:      	ldr	r3, [r2]
 8000c00:      	movs	r5, #0x1
 8000c02:      	add.w	r2, r10, r4
 8000c06:      	strd	r5, r3, [sp, #16]
 8000c0a:      	ldr	r3, [r0, #0xc]
 8000c0c:      	ldr	r0, [r2, #0x10]
 8000c0e:      	cbz	r3, 0x8000c30 <core::fmt::write::h57ce06a461283b3c+0xda> @ imm = #0x1e
 8000c10:      	cmp	r3, #0x1
 8000c12:      	bne	0x8000c26 <core::fmt::write::h57ce06a461283b3c+0xd0> @ imm = #0x10
 8000c14:      	add.w	r3, r1, r0, lsl #3
 8000c18:      	movw	r6, #0x3d5
 8000c1c:      	movt	r6, #0x800
 8000c20:      	ldr	r3, [r3, #0x4]
 8000c22:      	cmp	r3, r6
 8000c24:      	beq	0x8000c2a <core::fmt::write::h57ce06a461283b3c+0xd4> @ imm = #0x2
 8000c26:      	movs	r3, #0x0
 8000c28:      	b	0x8000c32 <core::fmt::write::h57ce06a461283b3c+0xdc> @ imm = #0x6
 8000c2a:      	ldr.w	r0, [r1, r0, lsl #3]
 8000c2e:      	ldr	r0, [r0]
 8000c30:      	movs	r3, #0x1
 8000c32:      	ldr	r2, [r2]
 8000c34:      	str	r0, [sp, #0x1c]
 8000c36:      	ldr.w	r0, [r1, r2, lsl #3]
 8000c3a:      	add.w	r1, r1, r2, lsl #3
 8000c3e:      	ldr	r2, [r1, #0x4]
 8000c40:      	add	r1, sp, #0x8
 8000c42:      	str	r3, [sp, #0x18]
 8000c44:      	blx	r2
 8000c46:      	cmp	r0, #0x0
 8000c48:      	bne	0x8000ccc <core::fmt::write::h57ce06a461283b3c+0x176> @ imm = #0x80
 8000c4a:      	ldr	r0, [sp, #0x4]
 8000c4c:      	adds	r4, #0x20
 8000c4e:      	add.w	r8, r8, #0x8
 8000c52:      	cmp	r0, r4
 8000c54:      	bne	0x8000baa <core::fmt::write::h57ce06a461283b3c+0x54> @ imm = #-0xae
 8000c56:      	ldr.w	r9, [sp]
 8000c5a:      	b	0x8000cae <core::fmt::write::h57ce06a461283b3c+0x158> @ imm = #0x50
 8000c5c:      	ldr.w	r0, [r11, #0x14]
 8000c60:      	cbz	r0, 0x8000caa <core::fmt::write::h57ce06a461283b3c+0x154> @ imm = #0x46
 8000c62:      	mvn	r1, #0x7
 8000c66:      	add.w	r0, r1, r0, lsl #3
 8000c6a:      	ldr.w	r2, [r11]
 8000c6e:      	movs	r1, #0x1
 8000c70:      	ldr.w	r3, [r11, #0x10]
 8000c74:      	add.w	r5, r1, r0, lsr #3
 8000c78:      	adds	r6, r2, #0x4
 8000c7a:      	add.w	r8, sp, #0x8
 8000c7e:      	adds	r4, r3, #0x4
 8000c80:      	mov	r9, r5
 8000c82:      	ldr	r2, [r6]
 8000c84:      	cbz	r2, 0x8000c94 <core::fmt::write::h57ce06a461283b3c+0x13e> @ imm = #0xc
 8000c86:      	ldrd	r0, r3, [sp, #32]
 8000c8a:      	ldr	r1, [r6, #-4]
 8000c8e:      	ldr	r3, [r3, #0xc]
 8000c90:      	blx	r3
 8000c92:      	cbnz	r0, 0x8000ccc <core::fmt::write::h57ce06a461283b3c+0x176> @ imm = #0x36
 8000c94:      	ldr	r0, [r4, #-4]
 8000c98:      	mov	r1, r8
 8000c9a:      	ldr	r2, [r4]
 8000c9c:      	blx	r2
 8000c9e:      	cbnz	r0, 0x8000ccc <core::fmt::write::h57ce06a461283b3c+0x176> @ imm = #0x2a
 8000ca0:      	adds	r4, #0x8
 8000ca2:      	adds	r6, #0x8
 8000ca4:      	subs	r5, #0x1
 8000ca6:      	bne	0x8000c82 <core::fmt::write::h57ce06a461283b3c+0x12c> @ imm = #-0x28
 8000ca8:      	b	0x8000cae <core::fmt::write::h57ce06a461283b3c+0x158> @ imm = #0x2
 8000caa:      	mov.w	r9, #0x0
 8000cae:      	ldrd	r0, r1, [r11]
 8000cb2:      	movs	r2, #0x0
 8000cb4:      	cmp	r9, r1
 8000cb6:      	it	lo
 8000cb8:      	addlo.w	r2, r0, r9, lsl #3
 8000cbc:      	bhs	0x8000cd6 <core::fmt::write::h57ce06a461283b3c+0x180> @ imm = #0x16
 8000cbe:      	ldrd	r0, r3, [sp, #32]
 8000cc2:      	ldrd	r1, r2, [r2]
 8000cc6:      	ldr	r3, [r3, #0xc]
 8000cc8:      	blx	r3
 8000cca:      	cbz	r0, 0x8000cd6 <core::fmt::write::h57ce06a461283b3c+0x180> @ imm = #0x8
 8000ccc:      	movs	r0, #0x1
 8000cce:      	add	sp, #0x2c
 8000cd0:      	pop.w	{r8, r9, r10, r11}
 8000cd4:      	pop	{r4, r5, r6, r7, pc}
 8000cd6:      	movs	r0, #0x0
 8000cd8:      	add	sp, #0x2c
 8000cda:      	pop.w	{r8, r9, r10, r11}
 8000cde:      	pop	{r4, r5, r6, r7, pc}

08000ce0 <<&T as core::fmt::Display>::fmt::h3d9984686708d6bf>:
 8000ce0:      	push	{r4, r5, r6, r7, lr}
 8000ce2:      	add	r7, sp, #0xc
 8000ce4:      	push.w	{r8, r9, r11}
 8000ce8:      	sub	sp, #0x18
 8000cea:      	ldr.w	lr, [r0]
 8000cee:      	mov	r2, sp
 8000cf0:      	ldrd	r12, r1, [r1, #24]
 8000cf4:      	mov	r3, r2
 8000cf6:      	ldm.w	lr, {r0, r4, r5, r6, r8, r9}
 8000cfa:      	stm.w	r3, {r0, r4, r5, r6, r8, r9}
 8000cfe:      	mov	r0, r12
 8000d00:      	bl	0x8000b56 <core::fmt::write::h57ce06a461283b3c> @ imm = #-0x1ae
 8000d04:      	add	sp, #0x18
 8000d06:      	pop.w	{r8, r9, r11}
 8000d0a:      	pop	{r4, r5, r6, r7, pc}

08000d0c <<&T as core::fmt::Display>::fmt::h96a382e6e4e6a291>:
 8000d0c:      	ldr	r0, [r0]
 8000d0e:      	mov	r3, r1
 8000d10:      	ldrd	r1, r2, [r0]
 8000d14:      	mov	r0, r3
 8000d16:      	b.w	0x80006c2 <core::fmt::Formatter::pad::h8e88ca98b16c2f5b> @ imm = #-0x658

08000d1a <ResetTrampoline>:
 8000d1a:      	push	{r7, lr}
 8000d1c:      	mov	r7, sp
 8000d1e:      	bl	0x8000220 <main>        @ imm = #-0xb02
 8000d22:      	trap

08000d24 <WWDG>:
 8000d24:      	b	0x8000d24 <WWDG>        @ imm = #-0x4

08000d26 <__pre_init>:
 8000d26:      	bx	lr

08000d28 <rust_begin_unwind>:
 8000d28:      	push	{r7, lr}
 8000d2a:      	mov	r7, sp
 8000d2c:      	sub	sp, #0x30
 8000d2e:      	str	r0, [sp, #0x4]
 8000d30:      	bl	0x80010f2 <__cpsid>     @ imm = #0x3be
 8000d34:      	movw	r0, #0xd7b
 8000d38:      	movw	r1, #0x13a4
 8000d3c:      	movt	r0, #0x800
 8000d40:      	add	r2, sp, #0x18
 8000d42:      	str	r0, [sp, #0xc]
 8000d44:      	add	r0, sp, #0x4
 8000d46:      	str	r0, [sp, #0x8]
 8000d48:      	mov.w	r0, #0xe0000000
 8000d4c:      	str	r0, [sp, #0x10]
 8000d4e:      	add	r0, sp, #0x10
 8000d50:      	str	r0, [sp, #0x14]
 8000d52:      	movs	r0, #0x1
 8000d54:      	str	r0, [sp, #0x2c]
 8000d56:      	add	r0, sp, #0x8
 8000d58:      	str	r0, [sp, #0x28]
 8000d5a:      	movs	r0, #0x0
 8000d5c:      	strd	r0, r0, [sp, #32]
 8000d60:      	movs	r0, #0x2
 8000d62:      	str	r0, [sp, #0x1c]
 8000d64:      	movw	r0, #0x13c0
 8000d68:      	movt	r0, #0x800
 8000d6c:      	movt	r1, #0x800
 8000d70:      	str	r0, [sp, #0x18]
 8000d72:      	add	r0, sp, #0x14
 8000d74:      	bl	0x8000b56 <core::fmt::write::h57ce06a461283b3c> @ imm = #-0x222
 8000d78:      	b	0x8000d78 <rust_begin_unwind+0x50> @ imm = #-0x4

08000d7a <<&T as core::fmt::Display>::fmt::hce163d9fc629b0e2>:
 8000d7a:      	push	{r4, r5, r6, r7, lr}
 8000d7c:      	add	r7, sp, #0xc
 8000d7e:      	str	r8, [sp, #-4]!
 8000d82:      	sub	sp, #0x38
 8000d84:      	ldrd	r4, r5, [r1, #24]
 8000d88:      	movw	r1, #0x12bc
 8000d8c:      	ldr	r3, [r5, #0xc]
 8000d8e:      	movt	r1, #0x800
 8000d92:      	ldr.w	r8, [r0]
 8000d96:      	movs	r2, #0xc
 8000d98:      	mov	r0, r4
 8000d9a:      	blx	r3
 8000d9c:      	cbz	r0, 0x8000daa <<&T as core::fmt::Display>::fmt::hce163d9fc629b0e2+0x30> @ imm = #0xa
 8000d9e:      	movs	r6, #0x1
 8000da0:      	mov	r0, r6
 8000da2:      	add	sp, #0x38
 8000da4:      	ldr	r8, [sp], #4
 8000da8:      	pop	{r4, r5, r6, r7, pc}
 8000daa:      	ldr.w	r0, [r8, #0x8]
 8000dae:      	cbz	r0, 0x8000dbc <<&T as core::fmt::Display>::fmt::hce163d9fc629b0e2+0x42> @ imm = #0xa
 8000db0:      	str	r0, [sp, #0x4]
 8000db2:      	movw	r0, #0xce1
 8000db6:      	movt	r0, #0x800
 8000dba:      	b	0x8000de8 <<&T as core::fmt::Display>::fmt::hce163d9fc629b0e2+0x6e> @ imm = #0x2a
 8000dbc:      	ldrd	r6, r0, [r8]
 8000dc0:      	ldr	r1, [r0, #0xc]
 8000dc2:      	mov	r0, r6
 8000dc4:      	blx	r1
 8000dc6:      	movw	r2, #0xa91e
 8000dca:      	movt	r2, #0x7ef2
 8000dce:      	eors	r1, r2
 8000dd0:      	movw	r2, #0xbcf4
 8000dd4:      	movt	r2, #0xecc7
 8000dd8:      	eors	r0, r2
 8000dda:      	orrs	r0, r1
 8000ddc:      	bne	0x8000e18 <<&T as core::fmt::Display>::fmt::hce163d9fc629b0e2+0x9e> @ imm = #0x38
 8000dde:      	movw	r0, #0xd0d
 8000de2:      	str	r6, [sp, #0x4]
 8000de4:      	movt	r0, #0x800
 8000de8:      	str	r0, [sp, #0xc]
 8000dea:      	add	r0, sp, #0x4
 8000dec:      	str	r0, [sp, #0x8]
 8000dee:      	add	r0, sp, #0x8
 8000df0:      	str	r0, [sp, #0x30]
 8000df2:      	movs	r0, #0x0
 8000df4:      	str	r0, [sp, #0x2c]
 8000df6:      	add	r2, sp, #0x20
 8000df8:      	str	r0, [sp, #0x28]
 8000dfa:      	movs	r0, #0x2
 8000dfc:      	str	r0, [sp, #0x24]
 8000dfe:      	movw	r0, #0x12cc
 8000e02:      	movt	r0, #0x800
 8000e06:      	movs	r6, #0x1
 8000e08:      	str	r0, [sp, #0x20]
 8000e0a:      	mov	r0, r4
 8000e0c:      	mov	r1, r5
 8000e0e:      	str	r6, [sp, #0x34]
 8000e10:      	bl	0x8000b56 <core::fmt::write::h57ce06a461283b3c> @ imm = #-0x2be
 8000e14:      	cmp	r0, #0x0
 8000e16:      	bne	0x8000da0 <<&T as core::fmt::Display>::fmt::hce163d9fc629b0e2+0x26> @ imm = #-0x7a
 8000e18:      	ldr.w	r0, [r8, #0xc]
 8000e1c:      	movw	r1, #0x3d9
 8000e20:      	movt	r1, #0x800
 8000e24:      	add.w	r2, r0, #0xc
 8000e28:      	str	r1, [sp, #0x1c]
 8000e2a:      	strd	r1, r2, [sp, #20]
 8000e2e:      	add.w	r1, r0, #0x8
 8000e32:      	str	r1, [sp, #0x10]
 8000e34:      	movw	r1, #0xb4b
 8000e38:      	movt	r1, #0x800
 8000e3c:      	add	r2, sp, #0x20
 8000e3e:      	strd	r0, r1, [sp, #8]
 8000e42:      	add	r1, sp, #0x8
 8000e44:      	movs	r0, #0x3
 8000e46:      	str	r1, [sp, #0x30]
 8000e48:      	movs	r1, #0x0
 8000e4a:      	str	r0, [sp, #0x34]
 8000e4c:      	strd	r0, r1, [sp, #36]
 8000e50:      	movw	r0, #0x1294
 8000e54:      	movt	r0, #0x800
 8000e58:      	str	r1, [sp, #0x2c]
 8000e5a:      	str	r0, [sp, #0x20]
 8000e5c:      	mov	r0, r4
 8000e5e:      	mov	r1, r5
 8000e60:      	bl	0x8000b56 <core::fmt::write::h57ce06a461283b3c> @ imm = #-0x30e
 8000e64:      	mov	r6, r0
 8000e66:      	mov	r0, r6
 8000e68:      	add	sp, #0x38
 8000e6a:      	ldr	r8, [sp], #4
 8000e6e:      	pop	{r4, r5, r6, r7, pc}

08000e70 <core::ptr::drop_in_place<&mut cortex_m::itm::Port>::h7d823aa99c0f7ddf>:
 8000e70:      	bx	lr

08000e72 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9>:
 8000e72:      	push	{r4, r5, r7, lr}
 8000e74:      	add	r7, sp, #0x8
 8000e76:      	cmp	r2, #0x0
 8000e78:      	beq.w	0x8000f7e <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x10c> @ imm = #0x102
 8000e7c:      	ldr	r0, [r0]
 8000e7e:      	lsls	r3, r1, #0x1f
 8000e80:      	ldr	r0, [r0]
 8000e82:      	beq	0x8000ea6 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x34> @ imm = #0x20
 8000e84:      	ldr	r3, [r0]
 8000e86:      	lsls	r3, r3, #0x1f
 8000e88:      	itttt	eq
 8000e8a:      	ldreq	r3, [r0]
 8000e8c:      	lslseq.w	r3, r3, #0x1f
 8000e90:      	ldreq	r3, [r0]
 8000e92:      	lslseq.w	r3, r3, #0x1f
 8000e96:      	bne	0x8000e9e <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x2c> @ imm = #0x4
 8000e98:      	ldr	r3, [r0]
 8000e9a:      	lsls	r3, r3, #0x1f
 8000e9c:      	beq	0x8000e84 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x12> @ imm = #-0x1c
 8000e9e:      	ldrb	r3, [r1], #1
 8000ea2:      	subs	r2, #0x1
 8000ea4:      	strb	r3, [r0]
 8000ea6:      	and	r3, r1, #0x3
 8000eaa:      	cmp	r3, #0x2
 8000eac:      	bne	0x8000ed4 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x62> @ imm = #0x24
 8000eae:      	cmp	r2, #0x2
 8000eb0:      	blo	0x8000f5c <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0xea> @ imm = #0xa8
 8000eb2:      	ldr	r3, [r0]
 8000eb4:      	lsls	r3, r3, #0x1f
 8000eb6:      	itttt	eq
 8000eb8:      	ldreq	r3, [r0]
 8000eba:      	lslseq.w	r3, r3, #0x1f
 8000ebe:      	ldreq	r3, [r0]
 8000ec0:      	lslseq.w	r3, r3, #0x1f
 8000ec4:      	bne	0x8000ecc <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x5a> @ imm = #0x4
 8000ec6:      	ldr	r3, [r0]
 8000ec8:      	lsls	r3, r3, #0x1f
 8000eca:      	beq	0x8000eb2 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x40> @ imm = #-0x1c
 8000ecc:      	ldrh	r3, [r1], #2
 8000ed0:      	subs	r2, #0x2
 8000ed2:      	strh	r3, [r0]
 8000ed4:      	cmp	r2, #0x0
 8000ed6:      	beq	0x8000f7e <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x10c> @ imm = #0xa4
 8000ed8:      	bic	r12, r2, #0x3
 8000edc:      	lsrs.w	lr, r2, #0x2
 8000ee0:      	beq	0x8000f10 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x9e> @ imm = #0x2c
 8000ee2:      	movs	r3, #0x0
 8000ee4:      	mov	r4, r1
 8000ee6:      	b	0x8000ef4 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x82> @ imm = #0xa
 8000ee8:      	ldr	r5, [r4], #4
 8000eec:      	adds	r3, #0x1
 8000eee:      	cmp	r3, lr
 8000ef0:      	str	r5, [r0]
 8000ef2:      	beq	0x8000f10 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x9e> @ imm = #0x1a
 8000ef4:      	ldr	r5, [r0]
 8000ef6:      	lsls	r5, r5, #0x1f
 8000ef8:      	itttt	eq
 8000efa:      	ldreq	r5, [r0]
 8000efc:      	lslseq.w	r5, r5, #0x1f
 8000f00:      	ldreq	r5, [r0]
 8000f02:      	lslseq.w	r5, r5, #0x1f
 8000f06:      	bne	0x8000ee8 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x76> @ imm = #-0x22
 8000f08:      	ldr	r5, [r0]
 8000f0a:      	lsls	r5, r5, #0x1f
 8000f0c:      	beq	0x8000ef4 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x82> @ imm = #-0x1c
 8000f0e:      	b	0x8000ee8 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x76> @ imm = #-0x2a
 8000f10:      	and	r2, r2, #0x3
 8000f14:      	add	r1, r12
 8000f16:      	cmp	r2, #0x2
 8000f18:      	blo	0x8000f3c <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0xca> @ imm = #0x20
 8000f1a:      	ldr	r3, [r0]
 8000f1c:      	lsls	r3, r3, #0x1f
 8000f1e:      	itttt	eq
 8000f20:      	ldreq	r3, [r0]
 8000f22:      	lslseq.w	r3, r3, #0x1f
 8000f26:      	ldreq	r3, [r0]
 8000f28:      	lslseq.w	r3, r3, #0x1f
 8000f2c:      	bne	0x8000f34 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0xc2> @ imm = #0x4
 8000f2e:      	ldr	r3, [r0]
 8000f30:      	lsls	r3, r3, #0x1f
 8000f32:      	beq	0x8000f1a <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0xa8> @ imm = #-0x1c
 8000f34:      	ldrh	r3, [r1], #2
 8000f38:      	subs	r2, #0x2
 8000f3a:      	strh	r3, [r0]
 8000f3c:      	cmp	r2, #0x1
 8000f3e:      	bne	0x8000f7e <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x10c> @ imm = #0x3c
 8000f40:      	ldr	r2, [r0]
 8000f42:      	lsls	r2, r2, #0x1f
 8000f44:      	itttt	eq
 8000f46:      	ldreq	r2, [r0]
 8000f48:      	lslseq.w	r2, r2, #0x1f
 8000f4c:      	ldreq	r2, [r0]
 8000f4e:      	lslseq.w	r2, r2, #0x1f
 8000f52:      	bne	0x8000f7a <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x108> @ imm = #0x24
 8000f54:      	ldr	r2, [r0]
 8000f56:      	lsls	r2, r2, #0x1f
 8000f58:      	beq	0x8000f40 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0xce> @ imm = #-0x1c
 8000f5a:      	b	0x8000f7a <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x108> @ imm = #0x1c
 8000f5c:      	cmp	r2, #0x1
 8000f5e:      	bne	0x8000f7e <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x10c> @ imm = #0x1c
 8000f60:      	ldr	r2, [r0]
 8000f62:      	lsls	r2, r2, #0x1f
 8000f64:      	bne	0x8000f7a <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x108> @ imm = #0x12
 8000f66:      	ldr	r2, [r0]
 8000f68:      	lsls	r2, r2, #0x1f
 8000f6a:      	itt	eq
 8000f6c:      	ldreq	r2, [r0]
 8000f6e:      	lslseq.w	r2, r2, #0x1f
 8000f72:      	bne	0x8000f7a <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0x108> @ imm = #0x4
 8000f74:      	ldr	r2, [r0]
 8000f76:      	lsls	r2, r2, #0x1f
 8000f78:      	beq	0x8000f60 <<&mut W as core::fmt::Write>::write_str::h1942a4b623bc78c9+0xee> @ imm = #-0x1c
 8000f7a:      	ldrb	r1, [r1]
 8000f7c:      	strb	r1, [r0]
 8000f7e:      	movs	r0, #0x0
 8000f80:      	pop	{r4, r5, r7, pc}

08000f82 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d>:
 8000f82:      	push	{r4, r6, r7, lr}
 8000f84:      	add	r7, sp, #0x8
 8000f86:      	sub	sp, #0x4
 8000f88:      	ldr	r0, [r0]
 8000f8a:      	movs	r2, #0x0
 8000f8c:      	cmp	r1, #0x80
 8000f8e:      	str	r2, [sp]
 8000f90:      	bhs	0x8000fa8 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x26> @ imm = #0x14
 8000f92:      	strb.w	r1, [sp]
 8000f96:      	movs	r1, #0x1
 8000f98:      	mov.w	lr, #0x1
 8000f9c:      	ldr	r0, [r0]
 8000f9e:      	and	r12, lr, #0x4
 8000fa2:      	cmp	r1, #0x0
 8000fa4:      	bne	0x8001030 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xae> @ imm = #0x88
 8000fa6:      	b	0x8001090 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x10e> @ imm = #0xe6
 8000fa8:      	cmp.w	r1, #0x800
 8000fac:      	bhs	0x8000fc8 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x46> @ imm = #0x18
 8000fae:      	mov.w	lr, #0x2
 8000fb2:      	mov	r2, r1
 8000fb4:      	bfi	r2, lr, #6, #26
 8000fb8:      	strb.w	r2, [sp, #0x1]
 8000fbc:      	movs	r2, #0xc0
 8000fbe:      	orr.w	r1, r2, r1, lsr #6
 8000fc2:      	strb.w	r1, [sp]
 8000fc6:      	b	0x8000ff2 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x70> @ imm = #0x28
 8000fc8:      	movs	r2, #0x2
 8000fca:      	mov	r3, r1
 8000fcc:      	bfi	r3, r2, #6, #26
 8000fd0:      	cmp.w	r1, #0x10000
 8000fd4:      	bhs	0x8001000 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x7e> @ imm = #0x28
 8000fd6:      	strb.w	r3, [sp, #0x2]
 8000fda:      	lsrs	r3, r1, #0x6
 8000fdc:      	bfi	r3, r2, #6, #26
 8000fe0:      	movs	r2, #0xe0
 8000fe2:      	orr.w	r1, r2, r1, lsr #12
 8000fe6:      	strb.w	r1, [sp]
 8000fea:      	strb.w	r3, [sp, #0x1]
 8000fee:      	mov.w	lr, #0x3
 8000ff2:      	movs	r1, #0x1
 8000ff4:      	ldr	r0, [r0]
 8000ff6:      	and	r12, lr, #0x4
 8000ffa:      	cmp	r1, #0x0
 8000ffc:      	beq	0x8001090 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x10e> @ imm = #0x90
 8000ffe:      	b	0x8001030 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xae> @ imm = #0x2e
 8001000:      	strb.w	r3, [sp, #0x3]
 8001004:      	lsrs	r3, r1, #0x6
 8001006:      	bfi	r3, r2, #6, #26
 800100a:      	strb.w	r3, [sp, #0x2]
 800100e:      	lsrs	r3, r1, #0xc
 8001010:      	mov.w	lr, #0x4
 8001014:      	bfi	r3, r2, #6, #26
 8001018:      	movs	r2, #0xf0
 800101a:      	orr.w	r1, r2, r1, lsr #18
 800101e:      	strb.w	r1, [sp]
 8001022:      	movs	r1, #0x0
 8001024:      	strb.w	r3, [sp, #0x1]
 8001028:      	ldr	r0, [r0]
 800102a:      	and	r12, lr, #0x4
 800102e:      	cbz	r1, 0x8001090 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x10e> @ imm = #0x5e
 8001030:      	mov	r1, sp
 8001032:      	and	r2, lr, #0x3
 8001036:      	add	r1, r12
 8001038:      	cmp	r2, #0x2
 800103a:      	blo	0x8001068 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xe6> @ imm = #0x2a
 800103c:      	ldr	r3, [r0]
 800103e:      	lsls	r3, r3, #0x1f
 8001040:      	itttt	eq
 8001042:      	ldreq	r3, [r0]
 8001044:      	lslseq.w	r3, r3, #0x1f
 8001048:      	ldreq	r3, [r0]
 800104a:      	lslseq.w	r3, r3, #0x1f
 800104e:      	bne	0x8001056 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xd4> @ imm = #0x4
 8001050:      	ldr	r3, [r0]
 8001052:      	lsls	r3, r3, #0x1f
 8001054:      	beq	0x800103c <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xba> @ imm = #-0x1c
 8001056:      	ldrh	r3, [r1], #2
 800105a:      	subs	r2, #0x2
 800105c:      	strh	r3, [r0]
 800105e:      	cmp	r2, #0x1
 8001060:      	beq	0x800106c <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xea> @ imm = #0x8
 8001062:      	movs	r0, #0x0
 8001064:      	add	sp, #0x4
 8001066:      	pop	{r4, r6, r7, pc}
 8001068:      	cmp	r2, #0x1
 800106a:      	bne	0x8001062 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xe0> @ imm = #-0xc
 800106c:      	ldr	r2, [r0]
 800106e:      	lsls	r2, r2, #0x1f
 8001070:      	itttt	eq
 8001072:      	ldreq	r2, [r0]
 8001074:      	lslseq.w	r2, r2, #0x1f
 8001078:      	ldreq	r2, [r0]
 800107a:      	lslseq.w	r2, r2, #0x1f
 800107e:      	bne	0x8001086 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x104> @ imm = #0x4
 8001080:      	ldr	r2, [r0]
 8001082:      	lsls	r2, r2, #0x1f
 8001084:      	beq	0x800106c <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xea> @ imm = #-0x1c
 8001086:      	ldrb	r1, [r1]
 8001088:      	strb	r1, [r0]
 800108a:      	movs	r0, #0x0
 800108c:      	add	sp, #0x4
 800108e:      	pop	{r4, r6, r7, pc}
 8001090:      	lsr.w	r3, lr, #0x2
 8001094:      	movs	r1, #0x0
 8001096:      	mov	r2, sp
 8001098:      	b	0x80010a6 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x124> @ imm = #0xa
 800109a:      	ldr	r4, [r2], #4
 800109e:      	adds	r1, #0x1
 80010a0:      	cmp	r1, r3
 80010a2:      	str	r4, [r0]
 80010a4:      	beq	0x8001030 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0xae> @ imm = #-0x78
 80010a6:      	ldr	r4, [r0]
 80010a8:      	lsls	r4, r4, #0x1f
 80010aa:      	itttt	eq
 80010ac:      	ldreq	r4, [r0]
 80010ae:      	lslseq.w	r4, r4, #0x1f
 80010b2:      	ldreq	r4, [r0]
 80010b4:      	lslseq.w	r4, r4, #0x1f
 80010b8:      	bne	0x800109a <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x118> @ imm = #-0x22
 80010ba:      	ldr	r4, [r0]
 80010bc:      	lsls	r4, r4, #0x1f
 80010be:      	beq	0x80010a6 <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x124> @ imm = #-0x1c
 80010c0:      	b	0x800109a <<&mut W as core::fmt::Write>::write_char::hd10b1fc09689eb3d+0x118> @ imm = #-0x2a

080010c2 <<&mut W as core::fmt::Write>::write_fmt::h21d4247d0230ed6f>:
 80010c2:      	push	{r4, r5, r6, r7, lr}
 80010c4:      	add	r7, sp, #0xc
 80010c6:      	str	r11, [sp, #-4]!
 80010ca:      	sub	sp, #0x20
 80010cc:      	ldr	r0, [r0]
 80010ce:      	add	r2, sp, #0x8
 80010d0:      	str	r0, [sp, #0x4]
 80010d2:      	ldm.w	r1, {r3, r4, r5, r6, r12, lr}
 80010d6:      	mov	r0, r2
 80010d8:      	movw	r1, #0x13a4
 80010dc:      	movt	r1, #0x800
 80010e0:      	stm.w	r0, {r3, r4, r5, r6, r12, lr}
 80010e4:      	add	r0, sp, #0x4
 80010e6:      	bl	0x8000b56 <core::fmt::write::h57ce06a461283b3c> @ imm = #-0x594
 80010ea:      	add	sp, #0x20
 80010ec:      	ldr	r11, [sp], #4
 80010f0:      	pop	{r4, r5, r6, r7, pc}

080010f2 <__cpsid>:
 80010f2:      	cpsid i
 80010f4:      	bx	lr

080010f6 <__cpsie>:
 80010f6:      	cpsie i
 80010f8:      	bx	lr

080010fa <__primask_r>:
 80010fa:      	mrs	r0, primask
 80010fe:      	bx	lr

08001100 <__aeabi_memcpy>:
 8001100:      	b.w	0x800118a <memcpy>      @ imm = #0x86

08001104 <__aeabi_memcpy4>:
 8001104:      	push	{r4, r5, r7, lr}
 8001106:      	add	r7, sp, #0x8
 8001108:      	cmp	r2, #0x4
 800110a:      	blo	0x8001170 <__aeabi_memcpy4+0x6c> @ imm = #0x62
 800110c:      	sub.w	r12, r2, #0x4
 8001110:      	movs	r3, #0x1
 8001112:      	add.w	r3, r3, r12, lsr #2
 8001116:      	ands	lr, r3, #0x3
 800111a:      	beq	0x800114c <__aeabi_memcpy4+0x48> @ imm = #0x2e
 800111c:      	mov	r3, r1
 800111e:      	mov	r4, r0
 8001120:      	ldr	r5, [r3], #4
 8001124:      	cmp.w	lr, #0x1
 8001128:      	str	r5, [r4], #4
 800112c:      	bne	0x800113c <__aeabi_memcpy4+0x38> @ imm = #0xc
 800112e:      	mov	r2, r12
 8001130:      	mov	r0, r4
 8001132:      	mov	r1, r3
 8001134:      	cmp.w	r12, #0xc
 8001138:      	bhs	0x8001152 <__aeabi_memcpy4+0x4e> @ imm = #0x16
 800113a:      	b	0x8001170 <__aeabi_memcpy4+0x6c> @ imm = #0x32
 800113c:      	ldr	r3, [r1, #0x4]
 800113e:      	cmp.w	lr, #0x2
 8001142:      	str	r3, [r0, #0x4]
 8001144:      	bne	0x8001178 <__aeabi_memcpy4+0x74> @ imm = #0x30
 8001146:      	subs	r2, #0x8
 8001148:      	adds	r1, #0x8
 800114a:      	adds	r0, #0x8
 800114c:      	cmp.w	r12, #0xc
 8001150:      	blo	0x8001170 <__aeabi_memcpy4+0x6c> @ imm = #0x1c
 8001152:      	ldr	r3, [r1]
 8001154:      	subs	r2, #0x10
 8001156:      	str	r3, [r0]
 8001158:      	cmp	r2, #0x3
 800115a:      	ldr	r3, [r1, #0x4]
 800115c:      	str	r3, [r0, #0x4]
 800115e:      	ldr	r3, [r1, #0x8]
 8001160:      	str	r3, [r0, #0x8]
 8001162:      	ldr	r3, [r1, #0xc]
 8001164:      	add.w	r1, r1, #0x10
 8001168:      	str	r3, [r0, #0xc]
 800116a:      	add.w	r0, r0, #0x10
 800116e:      	bhi	0x8001152 <__aeabi_memcpy4+0x4e> @ imm = #-0x20
 8001170:      	pop.w	{r4, r5, r7, lr}
 8001174:      	b.w	0x8001100 <__aeabi_memcpy> @ imm = #-0x78
 8001178:      	ldr	r3, [r1, #0x8]
 800117a:      	subs	r2, #0xc
 800117c:      	str	r3, [r0, #0x8]
 800117e:      	adds	r1, #0xc
 8001180:      	adds	r0, #0xc
 8001182:      	cmp.w	r12, #0xc
 8001186:      	bhs	0x8001152 <__aeabi_memcpy4+0x4e> @ imm = #-0x38
 8001188:      	b	0x8001170 <__aeabi_memcpy4+0x6c> @ imm = #-0x1c

0800118a <memcpy>:
 800118a:      	push	{r4, r5, r6, r7, lr}
 800118c:      	add	r7, sp, #0xc
 800118e:      	str	r8, [sp, #-4]!
 8001192:      	cbz	r2, 0x80011a6 <memcpy+0x1c> @ imm = #0x10
 8001194:      	subs	r3, r2, #0x1
 8001196:      	and	r12, r2, #0x3
 800119a:      	cmp	r3, #0x3
 800119c:      	bhs	0x80011ac <memcpy+0x22> @ imm = #0xc
 800119e:      	movs	r2, #0x0
 80011a0:      	cmp.w	r12, #0x0
 80011a4:      	bne	0x80011e6 <memcpy+0x5c> @ imm = #0x3e
 80011a6:      	ldr	r8, [sp], #4
 80011aa:      	pop	{r4, r5, r6, r7, pc}
 80011ac:      	bic	r2, r2, #0x3
 80011b0:      	add.w	lr, r0, #0x1
 80011b4:      	rsbs	r4, r2, #0
 80011b6:      	add.w	r8, r1, #0x1
 80011ba:      	mvn	r2, #0x3
 80011be:      	add.w	r5, r8, r2
 80011c2:      	add.w	r3, lr, r2
 80011c6:      	adds	r2, #0x4
 80011c8:      	ldrb	r6, [r5, #0x3]
 80011ca:      	strb	r6, [r3, #0x3]
 80011cc:      	ldrb	r6, [r5, #0x4]
 80011ce:      	strb	r6, [r3, #0x4]
 80011d0:      	ldrb	r6, [r5, #0x5]
 80011d2:      	strb	r6, [r3, #0x5]
 80011d4:      	ldrb	r5, [r5, #0x6]
 80011d6:      	strb	r5, [r3, #0x6]
 80011d8:      	adds	r3, r4, r2
 80011da:      	adds	r3, #0x4
 80011dc:      	bne	0x80011be <memcpy+0x34> @ imm = #-0x22
 80011de:      	adds	r2, #0x4
 80011e0:      	cmp.w	r12, #0x0
 80011e4:      	beq	0x80011a6 <memcpy+0x1c> @ imm = #-0x42
 80011e6:      	ldrb	r3, [r1, r2]
 80011e8:      	cmp.w	r12, #0x1
 80011ec:      	strb	r3, [r0, r2]
 80011ee:      	beq	0x80011a6 <memcpy+0x1c> @ imm = #-0x4c
 80011f0:      	adds	r3, r2, #0x1
 80011f2:      	cmp.w	r12, #0x2
 80011f6:      	ldrb	r6, [r1, r3]
 80011f8:      	strb	r6, [r0, r3]
 80011fa:      	beq	0x80011a6 <memcpy+0x1c> @ imm = #-0x58
 80011fc:      	adds	r2, #0x2
 80011fe:      	ldrb	r1, [r1, r2]
 8001200:      	strb	r1, [r0, r2]
 8001202:      	ldr	r8, [sp], #4
 8001206:      	pop	{r4, r5, r6, r7, pc}

08001208 <HardFaultTrampoline>:
 8001208:      	mov	r0, lr
 800120a:      	movs	r1, #0x4
 800120c:      	tst	r0, r1
 800120e:      	bne	0x8001216 <HardFaultTrampoline+0xe> @ imm = #0x4
 8001210:      	mrs	r0, msp
 8001214:      	b	0x800121c <HardFault_>  @ imm = #0x4
 8001216:      	mrs	r0, psp
 800121a:      	b	0x800121c <HardFault_>  @ imm = #-0x2

0800121c <HardFault_>:
 800121c:      	b	0x800121c <HardFault_>  @ imm = #-0x4
 800121e:      	bmi	0x80011ca <memcpy+0x40> @ imm = #-0x58
